# Generated by Django 4.2.5 on 2024-01-22 22:44
import json
from os import path

import django.core.serializers.json
from django.db import migrations, models
import django.db.models.deletion


JOB_TYPE_ID_JOB_CATEGORY_NAME_MAP = {
    "018950a2-21cb-7034-8d2a-03dff990cc1a": "System",
    "01895067-92fb-739c-a99d-037fde1798a4": "Network",
    "01895064-661c-79da-9ca7-cbf82507de61": "Network",
    "01895069-e74c-79de-8292-effb45265179": "Network",
    "01894bc7-ff6a-7e25-a5b5-4570425a8ab7": "Collection",
    "01895066-11f7-7c35-af62-603955c6c20f": "Collection",
    "01895065-8f59-7a8a-b432-79e20d749f4a": "Text",
    "0189506a-46f3-7d73-9dcf-a8fce59c50cc": "Text",
    "01895069-6750-73bb-b758-a64b417097f0": "Text",
    "01895066-7db2-794b-b91b-e3f5a340e859": "File Formats",
    "01895067-d598-7db8-88ad-46fed66e27f5": "File Formats",
    "01895068-3e02-72cb-b0d9-4e1bacc42c37": "File Formats",
    "01895068-a576-7a00-b4dd-2d5650bc69ab": "File Formats",
    "01895069-192a-74f8-84a9-b14f20c20f89": "File Formats",
    "01895069-a9fa-734c-b669-fcf528f85c1e": "File Formats",
    "0189506a-d09d-7571-9d3c-a44698d58d39": "File Formats",
    "018950a1-6773-79f3-8eb2-fba4356e23b9": "System",
    "01895067-417d-7665-ba60-a9bb9ca0aa3e": "Network",
}


migration_dir = path.abspath(
    path.join(path.dirname(__file__), "0002_become_arch_client")
)


def read_fixture(filename):
    """Deserialize a data fixture file that was generated using django-admin dumpdata"""
    with open(path.join(migration_dir, filename), "rb") as f:
        return json.load(f)


def load_initial_job_category_data(apps, schema_editor):
    """Bootstrap the JobCategory table so that the new JobType.category fields
    have something to point at."""
    JobCategory = apps.get_model("keystone", "JobCategory")
    for dumped_job_category in read_fixture("JobCategory_initial_data.json"):
        JobCategory.objects.create(
            id=dumped_job_category["pk"],
            name=dumped_job_category["fields"]["name"],
            description=dumped_job_category["fields"]["description"],
        )


def fix_jobtype_jobcategory_values(apps, schema_editor):
    """All new JobType.category fields were initialized to 1, now update them
    to point at the correct JobCategory."""
    JobCategory = apps.get_model("keystone", "JobCategory")
    JobType = apps.get_model("keystone", "JobType")
    name_jobcategory_map = {jobcat.name: jobcat for jobcat in JobCategory.objects.all()}
    for job_type in JobType.objects.all():
        job_type.category = name_jobcategory_map[
            JOB_TYPE_ID_JOB_CATEGORY_NAME_MAP[str(job_type.id)]
        ]
        job_type.save()


class Migration(migrations.Migration):
    dependencies = [
        ("keystone", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="JobCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.CharField(max_length=255)),
            ],
        ),
        migrations.RunPython(
            load_initial_job_category_data, lambda apps, schema_editor: None
        ),
        migrations.AddField(
            model_name="collection",
            name="arch_id",
            field=models.CharField(default="", max_length=255, unique=True),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="collection",
            name="metadata",
            field=models.JSONField(
                encoder=django.core.serializers.json.DjangoJSONEncoder, null=True
            ),
        ),
        migrations.AddField(
            model_name="collection",
            name="size_bytes",
            field=models.PositiveBigIntegerField(default=0),
        ),
        migrations.AddField(
            model_name="jobstart",
            name="collection",
            field=models.ForeignKey(
                default=1,
                on_delete=django.db.models.deletion.PROTECT,
                to="keystone.collection",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="jobtype",
            name="description",
            field=models.TextField(default=""),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="jobcomplete",
            name="job_start",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.PROTECT, to="keystone.jobstart"
            ),
        ),
        migrations.AlterField(
            model_name="jobevent",
            name="event_type",
            field=models.CharField(
                choices=[
                    ("SUBMITTED", "Submitted"),
                    ("QUEUED", "Queued"),
                    ("RUNNING", "Running"),
                    ("FINISHED", "Finished"),
                    ("FAILED", "Failed"),
                    ("CANCELLED", "Cancelled"),
                ],
                max_length=16,
            ),
        ),
        migrations.CreateModel(
            name="JobFile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("filename", models.CharField(max_length=255)),
                ("size_bytes", models.PositiveBigIntegerField()),
                ("mime_type", models.CharField(max_length=255)),
                ("line_count", models.IntegerField()),
                ("file_type", models.CharField(max_length=32)),
                ("creation_time", models.DateTimeField()),
                ("md5_checksum", models.CharField(max_length=128, null=True)),
                ("access_token", models.CharField(max_length=32)),
                (
                    "job_complete",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="keystone.jobcomplete",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Dataset",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "state",
                    models.CharField(
                        choices=[
                            ("SUBMITTED", "Submitted"),
                            ("QUEUED", "Queued"),
                            ("RUNNING", "Running"),
                            ("FINISHED", "Finished"),
                            ("FAILED", "Failed"),
                            ("CANCELLED", "Cancelled"),
                        ],
                        max_length=16,
                    ),
                ),
                ("start_time", models.DateTimeField(auto_now_add=True)),
                ("finished_time", models.DateTimeField(null=True)),
                (
                    "job_start",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="keystone.jobstart",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="collection",
            name="latest_dataset",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="keystone.dataset",
            ),
        ),
        migrations.AddField(
            model_name="jobtype",
            name="category",
            field=models.ForeignKey(
                default=1,
                on_delete=django.db.models.deletion.PROTECT,
                to="keystone.jobcategory",
            ),
            preserve_default=False,
        ),
        migrations.RunPython(
            fix_jobtype_jobcategory_values, lambda apps, schema_editor: None
        ),
        migrations.AddConstraint(
            model_name="jobfile",
            constraint=models.UniqueConstraint(
                fields=("job_complete", "filename"), name="jobfile_unique"
            ),
        ),
    ]
