{"version":3,"file":"arch-dataset-teams-selector.js","sources":["../../../../../web-components/src/archDatasetTeamsSelector/src/styles.ts","../../../../../web-components/src/archDatasetTeamsSelector/src/arch-dataset-teams-selector.ts"],"sourcesContent":["import { css } from \"lit\";\n\nimport { global } from \"../../lib/styles\";\n\nexport default [\n  global,\n  css`\n    h3 {\n      margin-block-start: 0;\n      margin-block-end: 0.5rem;\n      font-size: 1rem;\n    }\n\n    ul {\n      line-height: 1.6rem;\n      font-style: italic;\n    }\n\n    button {\n      padding: 0;\n      background-color: transparent;\n      margin-left: 1rem;\n      text-decoration: underline;\n      color: red;\n      font-size: 0.8em;\n    }\n\n    label {\n      margin-left: 1.2rem;\n    }\n\n    select {\n      padding: 0.2rem;\n      border-radius: 8px;\n    }\n  `,\n];\n","import { customElement, property } from \"lit/decorators.js\";\n\nimport { Dataset, Team } from \"../../lib/types\";\nimport ArchAPI from \"../../lib/ArchAPI\";\n\nimport { ArchGlobalModal } from \"../../archGlobalModal\";\nimport { ArchSelectAdder } from \"../../archSelectAdder/index\";\n\nimport styles from \"./styles\";\n\n@customElement(\"arch-dataset-teams-selector\")\nexport class ArchDatasetTeamsSelector extends ArchSelectAdder<Team> {\n  @property({ type: String }) datasetId!: Dataset[\"id\"];\n  @property({ type: Array }) userTeams!: Array<Team>;\n  @property({ type: Array }) datasetTeams!: Array<Team>;\n\n  static styles = styles;\n\n  connectedCallback() {\n    const { userTeams, datasetTeams } = this;\n    this.options = userTeams;\n    this.selectedOptions = datasetTeams;\n    this.deselectButtonText = \"stop sharing\";\n    this.selectCtaText = \"Add a team\";\n    this.selectedOptionsTitle = \"Currently Sharing With\";\n    this.valueGetter = (x) => String(x.id);\n    this.labelGetter = (x) => x.name;\n    super.connectedCallback();\n  }\n\n  async onChange(revertToPreviousState: () => void, srcEl: HTMLElement) {\n    const { datasetId, selectedOptions: teams } = this;\n    // Disable the inputs while we make the request.\n    this.disabled = true;\n    try {\n      await ArchAPI.datasets.updateTeams(datasetId, teams);\n    } catch (e) {\n      // Restore the previous selected option state and display an error.\n      revertToPreviousState();\n      ArchGlobalModal.showError(\n        \"\",\n        \"Could not update dataset teams. Please try again.\",\n        srcEl\n      );\n    }\n    // Re-enable the inputs.\n    this.disabled = false;\n  }\n}\n\n// Injects the tag into the global name space\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"arch-dataset-teams-selector\": ArchDatasetTeamsSelector;\n  }\n}\n"],"names":["styles","global","css","ArchDatasetTeamsSelector","ArchSelectAdder","connectedCallback","userTeams","datasetTeams","this","options","selectedOptions","deselectButtonText","selectCtaText","selectedOptionsTitle","valueGetter","x","String","id","labelGetter","name","super","async","revertToPreviousState","srcEl","datasetId","teams","disabled","ArchAPI","datasets","updateTeams","e","ArchGlobalModal","showError","__decorate","property","type","prototype","Array","customElement"],"mappings":"iYAIA,IAAeA,EAAA,CACbC,EACAC,CAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KCKE,IAAMC,EAAN,cAAuCC,EAO5CC,oBACE,MAAMC,UAAEA,EAASC,aAAEA,GAAiBC,KACpCA,KAAKC,QAAUH,EACfE,KAAKE,gBAAkBH,EACvBC,KAAKG,mBAAqB,eAC1BH,KAAKI,cAAgB,aACrBJ,KAAKK,qBAAuB,yBAC5BL,KAAKM,YAAeC,GAAMC,OAAOD,EAAEE,IACnCT,KAAKU,YAAeH,GAAMA,EAAEI,KAC5BC,MAAMf,mBACP,CAEDgB,eAAeC,EAAmCC,GAChD,MAAMC,UAAEA,EAAWd,gBAAiBe,GAAUjB,KAE9CA,KAAKkB,UAAW,EAChB,UACQC,EAAQC,SAASC,YAAYL,EAAWC,EAC/C,CAAC,MAAOK,GAEPR,IACAS,EAAgBC,UACd,GACA,oDACAT,EAEH,CAEDf,KAAKkB,UAAW,CACjB,GA/BMvB,EAAMH,OAAGA,EAJYiC,EAAA,CAA3BC,EAAS,CAAEC,KAAMnB,UAAoCb,EAAAiC,UAAA,iBAAA,GAC3BH,EAAA,CAA1BC,EAAS,CAAEC,KAAME,SAAiClC,EAAAiC,UAAA,iBAAA,GACxBH,EAAA,CAA1BC,EAAS,CAAEC,KAAME,SAAoClC,EAAAiC,UAAA,oBAAA,GAH3CjC,EAAwB8B,EAAA,CADpCK,EAAc,gCACFnC"}