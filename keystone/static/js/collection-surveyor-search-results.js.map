{"version":3,"file":"collection-surveyor-search-results.js","sources":["../../../../../web-components/src/lib/api/fetch.ts","../../../../../web-components/src/lib/api/search.ts","../../../../../web-components/src/collectionSurveyorSearchResults/src/collection-surveyor-search-results.ts"],"sourcesContent":["const CSRF_REGEX = /csrftoken=([^;$]+)/;\n\nexport const getCsrfHeader = (): { \"X-CSRFToken\"?: string } => {\n  const csrfMatch = CSRF_REGEX.exec(decodeURIComponent(document.cookie));\n  if (!csrfMatch) {\n    return {};\n  }\n\n  return { \"X-CSRFToken\": csrfMatch[1] };\n};\n\nexport function callJsonApi<Rq, Rsp>(options: {\n  url: string;\n  method: \"GET\" | \"POST\" | \"PUT\" | \"PATCH\" | \"DELETE\";\n  errorMessage: string;\n  body?: Rq;\n}): Promise<Rsp> {\n  const request: RequestInit = {\n    method: options.method,\n    headers: {\n      ...getCsrfHeader(),\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  if (options.body) {\n    request.body = JSON.stringify(options.body);\n  }\n  return (\n    fetch(options.url, request)\n      // cast response to generic response type\n      .then((response) => {\n        if (response.ok) {\n          return response.json().then((r) => r as Rsp);\n        } else {\n          throw new Error(options.errorMessage);\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n        // log error, return no response\n        return Promise.reject(options.errorMessage);\n      })\n  );\n}\n","import { callJsonApi } from \"./fetch\";\nimport { SolrData } from \"../../lib/types\";\n\nexport const MAX_SOLR_ROWS = 14000;\n\nexport function constructFinalSearchTerm(\n  searchTerm: string,\n  parsedFilters: string[]\n) {\n  // if search term and no filters, just use search term (which could be an empty string)\n  if (parsedFilters.length === 0) {\n    return searchTerm;\n    // if one filter and no search term, use filter\n  } else if (searchTerm === \"\") {\n    return parsedFilters.join(\" AND \");\n    // if multiple filters and search term, join and use all values\n  } else {\n    return [...parsedFilters, searchTerm].join(\" AND \");\n  }\n}\n\nexport function callSearchApi(\n  finalSearchTerm: string,\n  rowCount: number\n): Promise<SolrData> {\n  return callJsonApi<undefined, SolrData>({\n    url: `/collection_surveyor/search/?q=${encodeURIComponent(\n      finalSearchTerm\n    )}&r=${encodeURIComponent(rowCount)}`,\n    method: \"GET\",\n    errorMessage: \"error in collection surveyor search\",\n  });\n}\n","import { html, css, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators.js\";\nimport { eventOptions } from \"lit/decorators/event-options.js\";\n\nimport \"../../collectionSurveyorFacet/index\";\nimport \"../../collectionSurveyorPagination/index\";\nimport \"../../collectionSurveyorCart/index\";\nimport \"../../collectionSurveyorSearchBar/index\";\nimport \"../../collectionSurveyorActiveFilters/index\";\n\nimport {\n  CollectionSearchResult,\n  Facets,\n  CollectionAddToCartEventDetail,\n  CollectionSelectedDetail,\n  SelectedFacets,\n  SolrData,\n  CollectionRemovedFromCartDetail,\n} from \"../../lib/types\";\n\nimport {\n  humanBytes,\n  timestampStringToYearMonthString,\n} from \"../../lib/helpers\";\nimport {\n  callSearchApi,\n  constructFinalSearchTerm,\n  MAX_SOLR_ROWS,\n} from \"../../lib/api/search\";\n\n@customElement(\"collection-surveyor-search-results\")\nexport class CollectionSurveyorSearchResults extends LitElement {\n  @state() collections?: CollectionSearchResult[] = undefined;\n\n  @state() cachedCollections?: CollectionSearchResult[] = undefined;\n\n  @state() facets?: Facets = {};\n\n  @state() cachedFacets?: Facets = {};\n\n  // controls loading icon\n  // site is loading if we are getting the first itemsPerPage number of search results or loading remaining results in the background\n  @state() isLoading = false;\n\n  // controls when we display Total Results value for pagination, ie when we display'Page 1' or 'Page x of y (z Total Results)'\n  @state() backgroundCollectionsLoaded = false;\n\n  @state() collectionsSelected: {\n    [collectionName: string]: CollectionSelectedDetail;\n  } = {};\n\n  @state()\n  selectedFacets: SelectedFacets = {\n    f_organizationName: [],\n    f_organizationType: [],\n  };\n\n  @state() searchTerm = \"\";\n\n  @state() currentPage = 1;\n\n  @property({ type: Number }) itemsPerPage = 100;\n\n  connectedCallback() {\n    super.connectedCallback();\n    // load first itemsPerPage number of search results, then load remaining items and cache\n    this.loadSearchFirstPage()\n      .then(() => this.loadRemainingSearchResultsInBackgroundAndCacheData())\n      .catch((error) => {\n        throw error;\n      });\n  }\n\n  private get collectionsLength() {\n    return this.collections ? this.collections.length : 0;\n  }\n\n  private get startIndex(): number {\n    return (this.currentPage - 1) * this.itemsPerPage;\n  }\n\n  private get endIndex(): number {\n    return this.startIndex + this.itemsPerPage;\n  }\n\n  private get paginatedResults() {\n    return this.collections?.slice(this.startIndex, this.endIndex);\n  }\n\n  // event handler for selecting/deselecting a collection\n  handleUpdateCollectionsSelected(event: CustomEvent) {\n    const {\n      collectionSize,\n      collectionName,\n      collectionId,\n      organizationName,\n      createdDt,\n    }: CollectionAddToCartEventDetail =\n      event.detail as CollectionAddToCartEventDetail;\n\n    if (!(collectionName in this.collectionsSelected)) {\n      const sizeIdMap: CollectionSelectedDetail = {\n        collectionSize: collectionSize,\n        collectionId: collectionId,\n        organizationName: organizationName,\n        createdDt: createdDt,\n      };\n\n      // create a new collectionsSelected object with the existing selected collections plus the latest selected collection\n      this.collectionsSelected = {\n        ...this.collectionsSelected,\n        [collectionName]: sizeIdMap,\n      };\n    } else {\n      this.removeCollectionFromCollectionsSelected(collectionName);\n    }\n  }\n\n  // event handler for removing collection from cart\n  handleRemoveCollectionFromCart(event: CustomEvent) {\n    const { collectionName }: CollectionRemovedFromCartDetail =\n      event.detail as CollectionRemovedFromCartDetail;\n    this.removeCollectionFromCollectionsSelected(collectionName);\n  }\n\n  removeCollectionFromCollectionsSelected(collectionName: string) {\n    // create new collectionsSelected object excluding the deselected collection\n    const { [collectionName]: _, ...rest } = this.collectionsSelected;\n    this.collectionsSelected = { ...rest };\n  }\n\n  // event handler for pagination\n  handlePageChange(event: CustomEvent) {\n    this.currentPage = Number(event.detail);\n  }\n\n  // event handler for selecting facets\n  handleFacetSelected(event: CustomEvent) {\n    const facetName = (event.detail as { facetName: string }).facetName;\n    const facetFieldName = (\n      event.detail as { facetFieldName: keyof SelectedFacets }\n    ).facetFieldName;\n\n    this.selectedFacets = {\n      ...this.selectedFacets,\n      [facetFieldName]: [...this.selectedFacets[facetFieldName], facetName],\n    };\n\n    this.loadSearchResults();\n  }\n\n  // event handler for deselecting facets\n  handleFacetDeselected(event: CustomEvent) {\n    const facetName = (event.detail as { facetName: string }).facetName;\n    const facetFieldName = (\n      event.detail as { facetFieldName: keyof SelectedFacets }\n    ).facetFieldName;\n\n    // create new selectedFacets object, which is needed to update state and re-render\n    this.selectedFacets = {\n      ...this.selectedFacets,\n      [facetFieldName]: this.selectedFacets[facetFieldName].filter(\n        (value) => value !== facetName\n      ),\n    };\n\n    this.loadSearchResults();\n  }\n\n  private get filterQuery(): string[] {\n    return Object.entries(this.selectedFacets).flatMap(\n      ([facetFieldName, facetValues]: [string, string[]]) => {\n        // remove f_ prefix, eg. f_collectionName => collectionName\n        const searchableFieldName = facetFieldName.slice(2);\n\n        return facetValues.map(\n          (facetValue: string) => `${searchableFieldName}:\"${facetValue}\"`\n        );\n      }\n    );\n  }\n\n  // event handler for search term\n  private handleSearchClicked(event: CustomEvent) {\n    const searchText = (event.detail as { searchText: string }).searchText;\n    this.searchTerm = searchText;\n\n    this.loadSearchResults();\n  }\n\n  private get finalSearchTerm(): string {\n    return constructFinalSearchTerm(this.searchTerm, this.filterQuery);\n  }\n\n  private loadSearchFirstPage(): Promise<void> {\n    return this.performSearch(this.finalSearchTerm, this.itemsPerPage).then(\n      () => {\n        this.currentPage = 1;\n      }\n    );\n  }\n\n  private loadRemainingSearchResultsInBackground(): Promise<void> {\n    this.backgroundCollectionsLoaded = false;\n    return this.performSearch(\n      this.finalSearchTerm,\n      CollectionSurveyorSearchResults.MAX_COLLECTION_COUNT\n    ).then(() => {\n      this.backgroundCollectionsLoaded = true;\n    });\n  }\n\n  private static MAX_COLLECTION_COUNT = MAX_SOLR_ROWS;\n\n  private loadRemainingSearchResultsInBackgroundAndCacheData() {\n    this.performSearch(\"\", CollectionSurveyorSearchResults.MAX_COLLECTION_COUNT)\n      .then((allData: SolrData) => {\n        this.cachedCollections = allData.collections;\n        this.cachedFacets = allData.facets;\n        this.backgroundCollectionsLoaded = true;\n      })\n      .catch((error) => {\n        throw error;\n      });\n  }\n\n  private loadSearchResults() {\n    if (\n      // if empty search, use cached collections and facets for faster loading\n      this.finalSearchTerm === \"\" &&\n      this.cachedCollections !== undefined &&\n      this.cachedFacets !== undefined\n    ) {\n      this.collections = this.cachedCollections;\n      this.facets = this.cachedFacets;\n      this.currentPage = 1;\n    } else {\n      this.loadSearchFirstPage()\n        .then(() => this.loadRemainingSearchResultsInBackground())\n        .catch((error) => {\n          throw error;\n        });\n    }\n  }\n\n  private performSearch(\n    searchTerm: string,\n    rowCount: number\n  ): Promise<SolrData> {\n    this.isLoading = true;\n    return callSearchApi(searchTerm, rowCount)\n      .then((data: SolrData) => {\n        this.collections = data.collections;\n        this.facets = data.facets;\n        this.isLoading = false;\n        return data;\n      })\n      .catch((error) => {\n        this.isLoading = false;\n        throw error;\n      });\n  }\n\n  render() {\n    return html`\n      <!-- Collections Cart -->\n      <collection-surveyor-cart\n        .collectionsInCart=${this.collectionsSelected}\n        @collection-removed-from-cart=${this.handleRemoveCollectionFromCart}\n      ></collection-surveyor-cart>\n\n      <div class=\"search-facets-and-collections-container\">\n        <!-- Search Bar -->\n        <collection-surveyor-search-bar\n          .searchText=${this.searchTerm}\n          @search-clicked=\"${this.handleSearchClicked}\"\n        ></collection-surveyor-search-bar>\n\n        <!-- Facets and Collections-->\n        <div class=\"facets-and-collections-container\">\n          <!-- Loading icon -->\n            <div class=\"loading\">\n              ${this.isLoading ? html`<div class=\"spinner\"></div>` : html``}\n            </div>\n\n          ${\n            this.collectionsLength !== 0\n              ? html`\n                  <!-- Facets  -->\n                  <div class=\"facets-container\">\n                    <div>\n                      <h4>Narrow Your Results</h4>\n                      ${this.facets\n                        ? html` ${Object.entries(this.facets).map(\n                            ([key, value]) => html`\n                              <collection-surveyor-facet\n                                .facetField=${key}\n                                .facetFieldResults=${value}\n                                .selectedfacetFieldResults=${this\n                                  .selectedFacets[key as keyof SelectedFacets]}\n                                @facet-selected=${this.handleFacetSelected}\n                                @facet-deselected=${this.handleFacetDeselected}\n                              ></collection-surveyor-facet>\n                            `\n                          )}`\n                        : html`<p>No facets available</p>`}\n                    </div>\n                  </div>\n\n                  <!-- Collections -->\n                  <div class=\"collections-container\">\n                    <!-- Active Filters -->\n                    <collection-surveyor-active-filters\n                      .activeFilters=${this.selectedFacets}\n                      @facet-deselected=${this.handleFacetDeselected}\n                    ></collection-surveyor-active-filters>\n\n                    <!-- Pagination top of page -->\n                    <collection-surveyor-pagination\n                      .currentPage=\"${this.currentPage}\"\n                      .totalResults=\"${this.collectionsLength}\"\n                      .itemsPerPage=\"${this.itemsPerPage}\"\n                      .backgroundCollectionsLoaded=\"${this\n                        .backgroundCollectionsLoaded}\"\n                      @page-changed=\"${this.handlePageChange}\"\n                    ></collection-surveyor-pagination>\n\n                    <!-- Collections -->\n                    ${this.paginatedResults?.map(\n                      (collection) => html`\n                        <collection-surveyor-search-result\n                          .collection=${collection}\n                          .isSelected=${collection.collectionName in\n                          this.collectionsSelected}\n                          @update-collections-selected=\"${this\n                            .handleUpdateCollectionsSelected}\"\n                        ></collection-surveyor-search-result>\n                      `\n                    )}\n\n                    <!-- Pagination bottom of page -->\n                    <collection-surveyor-pagination\n                      .currentPage=\"${this.currentPage}\"\n                      .totalResults=\"${this.collectionsLength}\"\n                      .itemsPerPage=\"${this.itemsPerPage}\"\n                      .backgroundCollectionsLoaded=\"${this\n                        .backgroundCollectionsLoaded}\"\n                      @page-changed=\"${this.handlePageChange}\"\n                    ></collection-surveyor-pagination>\n                  </div>\n                `\n              : html``\n          }\n\n          ${\n            this.collectionsLength === 0 && !this.isLoading\n              ? html`\n                  <div class=\"no-results-message\">\n                    <h2>No Results Found For Your Search</h2>\n                    <p>Try a new search or clear your previous search</p>\n                    <p></p>\n                  </div>\n                `\n              : html``\n          }\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  static styles = css`\n    .search-facets-and-collections-container {\n      box-shadow: rgb(136, 136, 136) 1px 1px 6px;\n      border-radius: 6px;\n      margin: 20px 50px;\n    }\n\n    .facets-and-collections-container {\n      display: flex;\n      background-color: rgb(248, 248, 248);\n      position: relative;\n    }\n\n    .facets-container {\n      display: flex;\n      padding: 10px 20px;\n      width: 40%;\n    }\n\n    .collections-container {\n      display: flex;\n      flex-direction: column;\n      padding: 10px 20px;\n      width: -webkit-fill-available;\n    }\n\n    .no-results-message {\n      margin: auto;\n      text-align: center;\n    }\n\n    .loading {\n      height: 100px;\n      padding-left: 50%;\n      position: absolute;\n    }\n\n    .spinner {\n      border: 4px solid rgba(0, 0, 0, 0.1);\n      border-left-color: #333;\n      border-radius: 50%;\n      width: 50px;\n      height: 50px;\n      animation: spin 1s linear infinite;\n    }\n\n    @keyframes spin {\n      to {\n        transform: rotate(360deg);\n      }\n    }\n  `;\n}\n\n@customElement(\"collection-surveyor-search-result\")\nexport class CollectionSurveyorSearchResult extends LitElement {\n  @property({ type: Object }) collection!: CollectionSearchResult;\n\n  @property({ type: Boolean }) isSelected = false;\n\n  @eventOptions({ capture: true })\n  handleAddToCartChange(event: Event) {\n    const button = event.target as HTMLInputElement;\n    const {\n      collectionId,\n      collectionName,\n      collectionSize,\n      organizationName,\n      createdDt,\n    } = button.dataset;\n\n    const customEvent = new CustomEvent(\"update-collections-selected\", {\n      detail: {\n        collectionSize,\n        collectionName,\n        collectionId,\n        organizationName,\n        createdDt,\n      },\n      bubbles: true,\n      composed: true,\n    });\n\n    this.dispatchEvent(customEvent);\n  }\n\n  render() {\n    return html`\n      <div class=\"result-item\">\n        <div class=\"item-detail\">\n          <div class=\"item-detail-text\">\n            <h3>\n              <a\n                href=\"https://archive-it.org/collections/${this.collection\n                  .collectionId}\"\n                target=\"_blank\"\n                >${this.collection.collectionName}</a\n              >\n            </h3>\n            <ul>\n              <li>\n                <span class=\"item-detail-label\"> Organization: </span>\n                ${this.collection.organizationName}\n              </li>\n              ${this.collection.meta_Description\n                ? html` <li>\n                    <span class=\"item-detail-label\"> Description: </span>\n                    ${this.collection.meta_Description[0]}\n                  </li>`\n                : nothing}\n              <li>\n                <span class=\"item-detail-label\"> Archived since: </span>\n                ${timestampStringToYearMonthString(this.collection.created_dt)}\n              </li>\n              <li>\n                <span class=\"item-detail-label\"> Collection Size: </span>\n                ${humanBytes(this.collection.totalWarcBytes)}\n              </li>\n            </ul>\n          </div>\n        </div>\n        <div class=\"collection-button\">\n          <button\n            type=\"button\"\n            data-collection-id=${this.collection.collectionId}\n            data-collection-name=${this.collection.collectionName}\n            data-collection-size=${this.collection.totalWarcBytes}\n            data-organization-name=${this.collection.organizationName}\n            data-created-dt=${this.collection.created_dt}\n            @click=${this.handleAddToCartChange}\n          >\n            ${this.isSelected ? \"Remove from cart\" : \"Add to cart\"}\n          </button>\n        </div>\n      </div>\n    `;\n  }\n\n  static styles = css`\n    .result-item {\n      background-color: rgb(255, 255, 255);\n      border-radius: 6px;\n      box-shadow: rgb(136, 136, 136) 1px 1px 6px;\n      margin-bottom: 15px;\n      display: flex;\n      justify-content: space-around;\n    }\n\n    .item-detail {\n      padding: 1em 0 1em 1em;\n      display: inline-block;\n      width: 75%;\n    }\n\n    .item-detail-text h2,\n    .item-detail-text h3 {\n      padding: 0;\n      margin: 0;\n    }\n\n    .item-detail-text ul {\n      list-style-type: none;\n      padding: 0;\n      margin: 0;\n    }\n\n    .item-detail-text ul li {\n      margin: 0.6em 0;\n      line-height: 1.25;\n    }\n\n    .item-detail-text .item-detail-label {\n      font-weight: bold;\n    }\n\n    .collection-button {\n      display: inline-block;\n      vertical-align: top;\n      padding: 1em;\n    }\n\n    button {\n      width: 130px;\n    }\n\n    a {\n      color: #c9540a;\n    }\n  `;\n}\n"],"names":["CSRF_REGEX","getCsrfHeader","csrfMatch","exec","decodeURIComponent","document","cookie","callSearchApi","finalSearchTerm","rowCount","options","request","method","headers","Accept","body","JSON","stringify","fetch","url","then","response","ok","json","r","Error","errorMessage","catch","error","console","Promise","reject","callJsonApi","encodeURIComponent","CollectionSurveyorSearchResults","CollectionSurveyorSearchResults_1","LitElement","constructor","this","collections","undefined","cachedCollections","facets","cachedFacets","isLoading","backgroundCollectionsLoaded","collectionsSelected","selectedFacets","f_organizationName","f_organizationType","searchTerm","currentPage","itemsPerPage","connectedCallback","super","loadSearchFirstPage","loadRemainingSearchResultsInBackgroundAndCacheData","collectionsLength","length","startIndex","endIndex","paginatedResults","_a","slice","handleUpdateCollectionsSelected","event","collectionSize","collectionName","collectionId","organizationName","createdDt","detail","removeCollectionFromCollectionsSelected","sizeIdMap","handleRemoveCollectionFromCart","_","rest","handlePageChange","Number","handleFacetSelected","facetName","facetFieldName","loadSearchResults","handleFacetDeselected","filter","value","filterQuery","Object","entries","flatMap","facetValues","searchableFieldName","map","facetValue","handleSearchClicked","searchText","parsedFilters","join","performSearch","loadRemainingSearchResultsInBackground","MAX_COLLECTION_COUNT","allData","data","render","html","key","collection","styles","css","__decorate","state","prototype","property","type","customElement","CollectionSurveyorSearchResult","isSelected","handleAddToCartChange","button","target","dataset","customEvent","CustomEvent","bubbles","composed","dispatchEvent","meta_Description","nothing","timestampStringToYearMonthString","created_dt","humanBytes","totalWarcBytes","Boolean","eventOptions","capture"],"mappings":"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"}