{"version":3,"file":"arch-team-table.js","sources":["../../../../../web-components/src/archCreateNewTeamModal/src/styles.ts","../../../../../web-components/src/archCreateNewTeamModal/src/arch-create-new-team-modal.ts","../../../../../web-components/src/archTeamMembersSelector/src/styles.ts","../../../../../web-components/src/archTeamMembersSelector/src/arch-team-members-selector.ts","../../../../../web-components/src/archEditTeamModal/src/styles.ts","../../../../../web-components/src/archEditTeamModal/src/arch-edit-team-modal.ts","../../../../../web-components/src/archTeamTable/src/styles.ts","../../../../../web-components/src/archTeamTable/src/arch-team-table.ts"],"sourcesContent":["import { css } from \"lit\";\n\nimport { Bootstrap4Alerts } from \"../../lib/styles\";\nimport { ArchModal } from \"../../archModal/index\";\n\nexport default [\n  ...ArchModal.styles,\n  Bootstrap4Alerts,\n  css`\n    form > label {\n      font-weight: normal;\n      margin-top: 0.5rem;\n      font-size: 0.95rem;\n    }\n\n    form > label:first-child {\n      margin-top: 0;\n    }\n\n    form > label > em {\n      display: block;\n      font-size: 0.9em;\n    }\n\n    form > input,\n    form > select {\n      box-sizing: border-box;\n      width: 100%;\n    }\n\n    form > label[for=\"send-email\"],\n    form > input#send-email {\n      display: inline-block;\n      width: auto;\n    }\n\n    form > label[for=\"send-email\"] {\n      margin-left: 0.5em;\n    }\n\n    div.error {\n      margin-top: 1rem;\n      padding: 0.5rem 0.75rem;\n      display: none;\n    }\n\n    div.error.show {\n      display: block;\n    }\n  `,\n];\n","import { html } from \"lit\";\nimport { customElement, property, query } from \"lit/decorators.js\";\nimport ArchAPI from \"../../lib/ArchAPI\";\nimport { ResponseError, Team } from \"../../lib/types\";\n\nimport { ArchModal } from \"../../archModal/index\";\n\nimport styles from \"./styles\";\n\n@customElement(\"arch-create-new-team-modal\")\nexport class ArchCreateNewTeamModal extends ArchModal {\n  @property({ type: Number }) accountId!: number;\n  @property() onCreate!: () => void;\n\n  @query(\"form\") form!: HTMLFormElement;\n  @query(\"form > input#name\") nameInput!: HTMLInputElement;\n  @query(\"div.error\") errorEl!: HTMLElement;\n\n  private set unhandledError(showError: boolean) {\n    const { errorEl } = this;\n    if (showError) {\n      errorEl.classList.add(\"show\");\n    } else {\n      errorEl.classList.remove(\"show\");\n    }\n  }\n\n  static styles = styles;\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.scrollable = true;\n    this.modalSize = \"m\";\n    this.title = \"Create a New Team\";\n    this.submitButtonText = \"Create\";\n    this.content = html`\n      <form @submit=${this.submit} validate>\n        <input type=\"hidden\" name=\"account-id\" value=${this.accountId} />\n\n        <label for=\"name\"> Name </label>\n        <input\n          id=\"name\"\n          name=\"name\"\n          type=\"text\"\n          required\n          title=\"255 characters or fewer\"\n          autocomplete=\"off\"\n        />\n      </form>\n      <div class=\"error alert-danger\">\n        Something went wrong. Please try again.\n      </div>\n    `;\n\n    this.addEventListener(\"sp-closed\", this.onCloseHandler.bind(this));\n  }\n\n  submit(e: null | Event) {\n    // Prevent default form submit action.\n    if (e) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n    const { form } = this;\n\n    // Validate the form and show any errors.\n    if (!form.checkValidity()) {\n      form.reportValidity();\n      return;\n    }\n\n    const formData = new FormData(this.form);\n    const data: Partial<Team> = {\n      account_id: parseInt(formData.get(\"account-id\") as string),\n      name: formData.get(\"name\") as string,\n    };\n    this.createTeam(data);\n  }\n\n  private clearErrors() {\n    this.unhandledError = false;\n    if (this.form) {\n      this.nameInput.setCustomValidity(\"\");\n    }\n  }\n\n  private clearInputValidityOnChange(inputEl: HTMLInputElement) {\n    /* Clear the custom validity error message for the specified input\n     element on the first \"input\" event using a one-shot handler. */\n    const handler = () => {\n      inputEl.setCustomValidity(\"\");\n      inputEl.removeEventListener(\"input\", handler);\n    };\n    inputEl.addEventListener(\"input\", handler);\n  }\n\n  private createTeam(data: Partial<Team>) {\n    this.clearErrors();\n    ArchAPI.teams\n      .create(data as Team)\n      .then(() => {\n        this.open = false;\n        this.onCreate();\n      })\n      .catch((error: ResponseError) => {\n        if (error.response?.status !== 400) {\n          // Use assignment to state property instead of mutation to avoid having\n          // to manually invoke this.requestUpdate().\n          this.unhandledError = true;\n        } else {\n          error.response\n            .json()\n            .then((data: { details: string }) => {\n              const { details } = data;\n              let unhandledError = true;\n              // Maybe handle a duplicate name error.\n              if (\n                details.endsWith(\n                  \"already exists for fields ('lower(name::text)', 'account_id')\"\n                )\n              ) {\n                this.nameInput.setCustomValidity(\n                  \"A team with this name already exists.\"\n                );\n                this.nameInput.reportValidity();\n                this.clearInputValidityOnChange(this.nameInput);\n                unhandledError = false;\n              }\n\n              // Maybe handle an unknown error.\n              this.unhandledError = unhandledError;\n            })\n            .catch(() => {\n              this.unhandledError = true;\n            });\n        }\n      });\n  }\n\n  onCloseHandler(): void {\n    // ensure any previously entered text in the form field\n    // is reset so it doesn't show on subsequent renders\n    this.form?.reset();\n    this.clearErrors();\n  }\n}\n","import { css } from \"lit\";\n\nimport { global } from \"../../lib/styles\";\n\nexport default [\n  global,\n  css`\n    h3 {\n      margin-block-start: 0;\n      margin-block-end: 0.5rem;\n      font-size: 1rem;\n    }\n\n    ul {\n      line-height: 1.6rem;\n      font-style: italic;\n    }\n\n    button {\n      padding: 0;\n      background-color: transparent;\n      margin-left: 1rem;\n      text-decoration: underline;\n      color: red;\n      font-size: 0.8em;\n    }\n\n    label {\n      margin-left: 1.2rem;\n    }\n\n    select {\n      padding: 0.2rem;\n      border-radius: 8px;\n    }\n  `,\n];\n","import { PropertyValues } from \"lit\";\nimport { customElement, property } from \"lit/decorators.js\";\n\nimport { MinimalUser } from \"../../lib/types\";\n\nimport { ArchSelectAdder } from \"../../archSelectAdder/index\";\n\nimport styles from \"./styles\";\n\n@customElement(\"arch-team-members-selector\")\nexport class ArchTeamMembersSelector extends ArchSelectAdder<MinimalUser> {\n  @property({ type: Array }) accountUsers!: Array<MinimalUser>;\n  @property({ type: Array }) teamMembers!: Array<MinimalUser>;\n\n  static styles = styles;\n\n  connectedCallback() {\n    this.reset();\n    this.deselectButtonText = \"remove\";\n    this.headingLevel = 0;\n    this.selectCtaText = \"Add a user\";\n    this.valueGetter = (x) => String(x.id);\n    this.labelGetter = (x) => x.username;\n    super.connectedCallback();\n  }\n\n  willUpdate(changedProperties: PropertyValues) {\n    if (changedProperties.has(\"teamMembers\")) {\n      this.reset();\n    }\n  }\n\n  reset() {\n    /* Reset selector options and selectedOptions */\n    const { accountUsers, teamMembers } = this;\n    // Use Array.slice() to prevent mutation.\n    this.options = accountUsers.slice();\n    this.selectedOptions = teamMembers.slice();\n  }\n}\n\n// Injects the tag into the global name space\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"arch-team-members-selector\": ArchTeamMembersSelector;\n  }\n}\n","import { css } from \"lit\";\n\nimport { Bootstrap4Alerts } from \"../../lib/styles\";\nimport { ArchModal } from \"../../archModal/index\";\n\nexport default [\n  ...ArchModal.styles,\n  Bootstrap4Alerts,\n  css`\n    form > label {\n      font-weight: normal;\n      margin-top: 0.5rem;\n      font-size: 0.95rem;\n    }\n\n    form > label:first-child {\n      margin-top: 0;\n    }\n\n    form > label > em {\n      display: block;\n      font-size: 0.9em;\n    }\n\n    form > input,\n    form > select {\n      box-sizing: border-box;\n      width: 100%;\n    }\n\n    form > label[for=\"send-email\"],\n    form > input#send-email {\n      display: inline-block;\n      width: auto;\n    }\n\n    select[name=\"user-role\"]:disabled {\n      cursor: not-allowed;\n    }\n\n    form > label[for=\"send-email\"] {\n      margin-left: 0.5em;\n    }\n\n    div.error {\n      margin-top: 1rem;\n      padding: 0.5rem 0.75rem;\n      display: none;\n    }\n\n    div.error.show {\n      display: block;\n    }\n  `,\n];\n","import { html } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators.js\";\nimport ArchAPI from \"../../lib/ArchAPI\";\nimport { ResponseError, Team, TeamUpdate, User } from \"../../lib/types\";\n\nimport \"../../archTeamMembersSelector\";\nimport { ArchTeamMembersSelector } from \"../../archTeamMembersSelector\";\nimport { ArchModal } from \"../../archModal/index\";\n\nimport styles from \"./styles\";\n\n@customElement(\"arch-edit-team-modal\")\nexport class ArchEditTeamModal extends ArchModal {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  @property() onUpdate: (team: Team) => void = (team) => null;\n\n  @query(\"form\") form!: HTMLFormElement;\n  @query(\"form > input#name\") nameInput!: HTMLInputElement;\n  @query(\"div.error\") errorEl!: HTMLElement;\n  @query(\"arch-team-members-selector\")\n  membersSelector!: ArchTeamMembersSelector;\n\n  @state() accountUsers: Array<User> = [];\n\n  constructor() {\n    super();\n    void ArchAPI.users\n      .list()\n      .then((response) => (this.accountUsers = response.items));\n  }\n\n  private set unhandledError(showError: boolean) {\n    const { errorEl } = this;\n    if (showError) {\n      errorEl.classList.add(\"show\");\n    } else {\n      errorEl.classList.remove(\"show\");\n    }\n  }\n\n  static styles = styles;\n\n  set team(team: undefined | Team) {\n    const { accountUsers } = this;\n    // Clear the content if team has been set to undefined.\n    if (team === undefined) {\n      this.content = html``;\n      return;\n    }\n    this.content = html`\n      <form @submit=${this.submit} validate>\n        <input type=\"hidden\" name=\"id\" value=${team.id} />\n\n        <label for=\"name\">Name</label>\n        <input\n          id=\"name\"\n          name=\"name\"\n          type=\"text\"\n          value=${team.name}\n          autocomplete=\"off\"\n        />\n      </form>\n      <br />\n      <label for=\"team-members-selector\">Members</label>\n      <br />\n      <arch-team-members-selector\n        .accountUsers=${accountUsers}\n        .teamMembers=${team.members}\n        id=\"team-members-selector\"\n      >\n      </arch-team-members-selector>\n      <div class=\"error alert-danger\">\n        Something went wrong. Please try again.\n      </div>\n    `;\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.scrollable = true;\n    this.modalSize = \"m\";\n    this.submitButtonText = \"Save\";\n    this.title = \"Edit Team\";\n    this.addEventListener(\"sp-closed\", this.onCloseHandler.bind(this));\n  }\n\n  submit(e: null | Event) {\n    // Prevent default form submit action.\n    if (e) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n    const { form, membersSelector } = this;\n\n    // Validate the form and show any errors.\n    if (!form.checkValidity()) {\n      form.reportValidity();\n      return;\n    }\n\n    const formData = new FormData(this.form);\n    const teamId = parseInt(formData.get(\"id\") as string);\n    const data: TeamUpdate = {\n      name: formData.get(\"name\") as string,\n      members: membersSelector.selectedOptions,\n    };\n    this.updateTeam(teamId, data);\n  }\n\n  private clearErrors() {\n    this.unhandledError = false;\n    if (this.form) {\n      this.nameInput.setCustomValidity(\"\");\n    }\n  }\n\n  private clearInputValidityOnChange(inputEl: HTMLInputElement) {\n    /* Clear the custom validity error message for the specified input\n     element on the first \"input\" event using a one-shot handler. */\n    const handler = () => {\n      inputEl.setCustomValidity(\"\");\n      inputEl.removeEventListener(\"input\", handler);\n    };\n    inputEl.addEventListener(\"input\", handler);\n  }\n\n  private updateTeam(teamId: Team[\"id\"], data: TeamUpdate) {\n    this.clearErrors();\n    ArchAPI.teams\n      .update(teamId, data)\n      .then((team: Team) => {\n        this.open = false;\n        // Invoke any registered onUpdate handler and catch/log any error\n        // to prevent triggering display of the modal error element.\n        try {\n          this.onUpdate(team);\n        } catch (e) {\n          console.error(e);\n        }\n      })\n      .catch((error: ResponseError) => {\n        if (error.response?.status !== 400) {\n          this.unhandledError = true;\n        } else {\n          error.response\n            .json()\n            .then((data: { details: string }) => {\n              const { details } = data;\n              // Maybe handle a duplicate teamname error.\n              if (\n                details.endsWith(\n                  \"already exists for fields ('lower(name::text)', 'account_id')\"\n                )\n              ) {\n                this.nameInput.setCustomValidity(\n                  \"A team with this name already exists.\"\n                );\n                this.nameInput.reportValidity();\n                this.clearInputValidityOnChange(this.nameInput);\n              } else {\n                this.unhandledError = true;\n              }\n            })\n            .catch(() => (this.unhandledError = true));\n        }\n      });\n  }\n\n  onCloseHandler(): void {\n    /* Reset form and members selector, and clear errors on close. */\n    this.form?.reset();\n    this.membersSelector.reset();\n    this.clearErrors();\n  }\n}\n","import { css } from \"lit\";\n\nexport default [\n  css`\n    data-table > table {\n      table-layout: fixed;\n    }\n\n    data-table > table > thead > tr > th,\n    data-table > table > tbody > tr > td {\n      white-space: nowrap;\n      max-width: none;\n    }\n\n    data-table > table > thead > tr > th.date-created {\n      width: 8em;\n    }\n\n    data-table > table > thead > tr > th.last-login {\n      width: 8em;\n    }\n\n    data-table > table > thead > tr > th.role {\n      width: 5em;\n    }\n  `,\n];\n","import { PropertyValues } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators.js\";\n\nimport { Team, User, UserRoles } from \"../../lib/types\";\nimport { toTitleCase } from \"../../lib/helpers\";\nimport { Topics } from \"../../lib/pubsub\";\n\nimport { ArchDataTable } from \"../../archDataTable/index\";\n\nimport { ArchCreateNewTeamModal } from \"../../archCreateNewTeamModal/index\";\nimport { ArchEditTeamModal } from \"../../archEditTeamModal/index\";\n\nimport Styles from \"./styles.js\";\n\n@customElement(\"arch-team-table\")\nexport class ArchTeamTable extends ArchDataTable<Team> {\n  @property({ type: Number }) accountId!: number;\n  @property({ type: Number }) userId!: User[\"id\"];\n  @property({ type: Boolean }) userIsStaff!: boolean;\n  @property({ type: String }) userRole!: UserRoles;\n\n  @state() createNewTeamModalTrigger!: HTMLElement;\n  @state() editTeamModal!: ArchEditTeamModal;\n  @state() editTeamModalTrigger!: HTMLElement;\n\n  static styles = [...ArchDataTable.styles, ...Styles];\n\n  willUpdate(_changedProperties: PropertyValues) {\n    super.willUpdate(_changedProperties);\n    this.actionButtonDisabled = [false, false];\n    // Add selection action buttons if user is staff or admin.\n    const isStaffOrAdmin =\n      this.userIsStaff || this.userRole === UserRoles.ADMIN;\n    if (isStaffOrAdmin) {\n      this.actionButtonLabels = [\"Edit Team\"];\n      this.actionButtonSignals = [Topics.DISPLAY_EDIT_TEAM_MODAL];\n    }\n    this.apiCollectionEndpoint = \"/teams\";\n    this.apiStaticParamPairs = [];\n    this.cellRenderers = [\n      undefined,\n      (member) => (member as unknown as Team[\"members\"][0]).username,\n    ];\n    this.columns = [\"name\", \"members\"];\n    this.columnHeaders = [\"Name\", \"Members\"];\n    this.pageLength = 50;\n    this.persistSearchStateInUrl = true;\n    this.pluralName = \"Account Teams\";\n    this.rowClickEnabled = true;\n    this.searchColumns = [\"name\", \"members\"];\n    this.searchColumnLabels = this.searchColumns.map(toTitleCase);\n    this.selectable = isStaffOrAdmin;\n    this.singleName = \"Account Team\";\n    this.sort = \"-id\";\n    this.sortableColumns = [true];\n\n    // Display \"Create User\" button to staff / admin users.\n    if (isStaffOrAdmin) {\n      this.nonSelectionActions = [Topics.DISPLAY_CREATE_TEAM_MODAL];\n      this.nonSelectionActionLabels = [\"Create New Team\"];\n    }\n  }\n\n  _createHiddenModalTriggerButton(): HTMLButtonElement {\n    const el = document.createElement(\"button\");\n    el.setAttribute(\"slot\", \"trigger\");\n    el.style.display = \"none\";\n    return el;\n  }\n\n  render() {\n    // Instantiate the team create modal and create a trigger element.\n    const createNewTeamModal = new ArchCreateNewTeamModal();\n    createNewTeamModal.accountId = this.accountId;\n    createNewTeamModal.onCreate = () => void this.dataTable.throttledDoSearch();\n    this.createNewTeamModalTrigger = this._createHiddenModalTriggerButton();\n    createNewTeamModal.appendChild(this.createNewTeamModalTrigger);\n\n    // Instantiate the edit team modal and create a trigger element.\n    this.editTeamModal = new ArchEditTeamModal();\n    this.editTeamModal.onUpdate = () => void this.dataTable.throttledDoSearch();\n    this.editTeamModalTrigger = this._createHiddenModalTriggerButton();\n    this.editTeamModal.appendChild(this.editTeamModalTrigger);\n\n    return [\n      super.render(),\n      createNewTeamModal,\n      this.editTeamModal,\n    ] as Array<HTMLElement>;\n  }\n\n  showEditTeamModal(team: Team) {\n    this.editTeamModal.team = team;\n    this.editTeamModalTrigger.click();\n  }\n\n  selectionActionHandler(action: string, selectedRows: Array<Team>) {\n    switch (action as Topics) {\n      case Topics.DISPLAY_EDIT_TEAM_MODAL:\n        this.showEditTeamModal(selectedRows[0]);\n        break;\n      default:\n        break;\n    }\n  }\n\n  nonSelectionActionHandler(action: string) {\n    switch (action as Topics) {\n      case Topics.DISPLAY_CREATE_TEAM_MODAL:\n        this.createNewTeamModalTrigger.click();\n        break;\n      default:\n        break;\n    }\n  }\n\n  postSelectionChangeHandler(selectedRows: Array<Team>) {\n    /* Update DataTable.actionButtonDisabled based on the number\n       of selected rows.\n    */\n    const { dataTable } = this;\n    const { props } = dataTable;\n    const numSelected = selectedRows.length;\n    const editTeamEnabled = numSelected === 1;\n    props.actionButtonDisabled = [!editTeamEnabled];\n    dataTable.setSelectionActionButtonDisabledState(numSelected === 0);\n  }\n}\n\n// Injects the <ait-team-table> tag into the global name space\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"arch-team-table\": ArchTeamTable;\n  }\n}\n"],"names":["styles$2","ArchModal","styles","Bootstrap4Alerts","css","ArchCreateNewTeamModal","unhandledError","showError","errorEl","this","classList","add","remove","connectedCallback","super","scrollable","modalSize","title","submitButtonText","content","html","submit","accountId","addEventListener","onCloseHandler","bind","e","preventDefault","stopPropagation","form","checkValidity","reportValidity","formData","FormData","data","account_id","parseInt","get","name","createTeam","clearErrors","nameInput","setCustomValidity","clearInputValidityOnChange","inputEl","handler","removeEventListener","ArchAPI","teams","create","then","open","onCreate","catch","error","response","_a","status","json","details","endsWith","reset","__decorate","property","type","Number","prototype","query","customElement","styles$1","global","ArchTeamMembersSelector","ArchSelectAdder","deselectButtonText","headingLevel","selectCtaText","valueGetter","x","String","id","labelGetter","username","willUpdate","changedProperties","has","accountUsers","teamMembers","options","slice","selectedOptions","Array","ArchEditTeamModal","constructor","onUpdate","team","users","list","items","undefined","members","membersSelector","teamId","updateTeam","update","console","state","Styles","ArchTeamTable","ArchDataTable","_changedProperties","actionButtonDisabled","isStaffOrAdmin","userIsStaff","userRole","UserRoles","ADMIN","actionButtonLabels","actionButtonSignals","Topics","DISPLAY_EDIT_TEAM_MODAL","apiCollectionEndpoint","apiStaticParamPairs","cellRenderers","member","columns","columnHeaders","pageLength","persistSearchStateInUrl","pluralName","rowClickEnabled","searchColumns","searchColumnLabels","map","toTitleCase","selectable","singleName","sort","sortableColumns","nonSelectionActions","DISPLAY_CREATE_TEAM_MODAL","nonSelectionActionLabels","_createHiddenModalTriggerButton","el","document","createElement","setAttribute","style","display","render","createNewTeamModal","dataTable","throttledDoSearch","createNewTeamModalTrigger","appendChild","editTeamModal","editTeamModalTrigger","showEditTeamModal","click","selectionActionHandler","action","selectedRows","nonSelectionActionHandler","postSelectionChangeHandler","props","numSelected","length","editTeamEnabled","setSelectionActionButtonDisabledState","Boolean"],"mappings":"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"}