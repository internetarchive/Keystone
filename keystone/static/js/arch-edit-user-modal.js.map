{"version":3,"file":"arch-edit-user-modal.js","sources":["../../../../../web-components/src/archUserTeamsSelector/src/styles.ts","../../../../../web-components/src/archUserTeamsSelector/src/arch-user-teams-selector.ts","../../../../../web-components/src/archEditUserModal/src/styles.ts","../../../../../web-components/src/archEditUserModal/src/arch-edit-user-modal.ts"],"sourcesContent":["import { css } from \"lit\";\n\nimport { global } from \"../../lib/styles\";\n\nexport default [\n  global,\n  css`\n    h3 {\n      margin-block-start: 0;\n      margin-block-end: 0.5rem;\n      font-size: 1rem;\n    }\n\n    ul {\n      line-height: 1.6rem;\n      font-style: italic;\n    }\n\n    button {\n      padding: 0;\n      background-color: transparent;\n      margin-left: 1rem;\n      text-decoration: underline;\n      color: red;\n      font-size: 0.8em;\n    }\n\n    label {\n      margin-left: 1.2rem;\n    }\n\n    select {\n      padding: 0.2rem;\n      border-radius: 8px;\n    }\n  `,\n];\n","import { PropertyValues } from \"lit\";\nimport { customElement, property } from \"lit/decorators.js\";\n\nimport { MinimalTeam } from \"../../lib/types\";\n\nimport { ArchSelectAdder } from \"../../archSelectAdder/index\";\n\nimport styles from \"./styles\";\n\n@customElement(\"arch-user-teams-selector\")\nexport class ArchUserTeamsSelector extends ArchSelectAdder<MinimalTeam> {\n  @property({ type: Array }) accountTeams!: Array<MinimalTeam>;\n  @property({ type: Array }) userTeams!: Array<MinimalTeam>;\n\n  static styles = styles;\n\n  connectedCallback() {\n    this.reset();\n    this.deselectButtonText = \"remove\";\n    this.headingLevel = 0;\n    this.selectCtaText = \"Add a team\";\n    this.valueGetter = (x) => String(x.id);\n    this.labelGetter = (x) => x.name;\n    super.connectedCallback();\n  }\n\n  willUpdate(changedProperties: PropertyValues) {\n    if (changedProperties.has(\"userTeams\")) {\n      this.reset();\n    }\n  }\n\n  reset() {\n    /* Reset selector options and selectedOptions */\n    const { accountTeams, userTeams } = this;\n    // Use Array.slice() to prevent mutation.\n    this.options = accountTeams.slice();\n    this.selectedOptions = userTeams.slice();\n  }\n}\n\n// Injects the tag into the global name space\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"arch-user-teams-selector\": ArchUserTeamsSelector;\n  }\n}\n","import { css } from \"lit\";\n\nimport { Bootstrap4Alerts } from \"../../lib/styles\";\nimport { ArchModal } from \"../../archModal/index\";\n\nexport default [\n  ...ArchModal.styles,\n  Bootstrap4Alerts,\n  css`\n    form > label {\n      font-weight: normal;\n      margin-top: 0.5rem;\n      font-size: 0.95rem;\n    }\n\n    form > label:first-child {\n      margin-top: 0;\n    }\n\n    form > label > em {\n      display: block;\n      font-size: 0.9em;\n    }\n\n    form > input,\n    form > select {\n      box-sizing: border-box;\n      width: 100%;\n    }\n\n    form > label[for=\"send-email\"],\n    form > input#send-email {\n      display: inline-block;\n      width: auto;\n    }\n\n    select[name=\"user-role\"]:disabled {\n      cursor: not-allowed;\n    }\n\n    form > label[for=\"send-email\"] {\n      margin-left: 0.5em;\n    }\n\n    div.error {\n      margin-top: 1rem;\n      padding: 0.5rem 0.75rem;\n      display: none;\n    }\n\n    div.error.show {\n      display: block;\n    }\n  `,\n];\n","import { html } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators.js\";\nimport ArchAPI from \"../../lib/ArchAPI\";\nimport {\n  ResponseError,\n  Team,\n  User,\n  UserRoles,\n  UserUpdate,\n} from \"../../lib/types\";\n\nimport \"../../archUserTeamsSelector\";\nimport { ArchUserTeamsSelector } from \"../../archUserTeamsSelector\";\nimport { ArchModal } from \"../../archModal/index\";\n\nimport styles from \"./styles\";\n\n@customElement(\"arch-edit-user-modal\")\nexport class ArchEditUserModal extends ArchModal {\n  @property({ type: Number }) userId!: User[\"id\"];\n  @property({ type: Boolean }) profileMode = false;\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  @property() onUpdate: (user: User) => void = (user) => null;\n\n  @query(\"form\") form!: HTMLFormElement;\n  @query(\"form > input#user-email\") emailInput!: HTMLInputElement;\n  @query(\"div.error\") errorEl!: HTMLElement;\n  @query(\"arch-user-teams-selector\")\n  teamsSelector!: ArchUserTeamsSelector;\n\n  @state() accountTeams: Array<Team> = [];\n\n  constructor() {\n    super();\n    void ArchAPI.teams\n      .list()\n      .then((response) => (this.accountTeams = response.items));\n  }\n\n  private set unhandledError(showError: boolean) {\n    const { errorEl } = this;\n    if (showError) {\n      errorEl.classList.add(\"show\");\n    } else {\n      errorEl.classList.remove(\"show\");\n    }\n  }\n\n  static styles = styles;\n\n  set user(user: undefined | User) {\n    const { accountTeams, profileMode, userId } = this;\n    // Clear the content if user has been set to undefined.\n    if (user === undefined) {\n      this.content = html``;\n      return;\n    }\n    const userIsSelf = user.id === userId;\n    this.content = html`\n      <form validate>\n        <input type=\"hidden\" name=\"id\" value=${user.id} />\n\n        <label for=\"first-name\">First Name</label>\n        <input\n          id=\"first-name\"\n          name=\"first-name\"\n          type=\"text\"\n          value=${user.first_name}\n        />\n\n        <label for=\"last-name\">Last Name</label>\n        <input\n          id=\"last-name\"\n          name=\"last-name\"\n          type=\"text\"\n          value=${user.last_name}\n        />\n\n        <label for=\"user-email\">Email</label>\n        <input\n          id=\"user-email\"\n          name=\"user-email\"\n          type=\"email\"\n          required\n          value=${user.email}\n        />\n\n        ${profileMode\n          ? html``\n          : html`\n              <label for=\"user-role\">Role</label>\n              <select\n                id=\"user-role\"\n                name=\"user-role\"\n                required\n                ?disabled=${userIsSelf}\n                title=${userIsSelf\n                  ? \"Your role can only be changed by another Admin\"\n                  : \"Select user role\"}\n              >\n                ${Object.entries(UserRoles).map(\n                  ([k, v]) => html`\n                    <option value=\"${v}\" ?selected=${k === user.role}>\n                      ${k}\n                    </option>\n                  `\n                )}\n              </select>\n            `}\n\n        <label for=\"user-teams-selector\">Teams</label>\n        <arch-user-teams-selector\n          .accountTeams=${accountTeams}\n          .userTeams=${user.teams}\n          id=\"user-teams-selector\"\n        >\n        </arch-user-teams-selector>\n      </form>\n      <div class=\"error alert-danger\">\n        Something went wrong. Please try again.\n      </div>\n    `;\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    const { profileMode } = this;\n    this.scrollable = true;\n    this.modalSize = \"m\";\n    this.submitButtonText = \"Save\";\n    this.title = profileMode ? \"Edit Profile\" : \"Edit User\";\n    this.addEventListener(\"sp-opened\", this.onOpenHandler.bind(this));\n    this.addEventListener(\"sp-closed\", this.onCloseHandler.bind(this));\n  }\n\n  submit() {\n    const { form, teamsSelector } = this;\n\n    // Validate the form and show any errors.\n    if (!form.checkValidity()) {\n      form.reportValidity();\n      return;\n    }\n\n    const formData = new FormData(this.form);\n    const userId = parseInt(formData.get(\"id\") as string);\n    const data: UserUpdate = {\n      email: formData.get(\"user-email\") as string,\n      first_name: formData.get(\"first-name\") as string,\n      last_name: formData.get(\"last-name\") as string,\n      role: formData.get(\"user-role\") as User[\"role\"],\n      teams: teamsSelector.selectedOptions,\n    };\n    this.updateUser(userId, data);\n  }\n\n  private clearErrors() {\n    this.unhandledError = false;\n    if (this.form) {\n      this.emailInput.setCustomValidity(\"\");\n    }\n  }\n\n  private clearInputValidityOnChange(inputEl: HTMLInputElement) {\n    /* Clear the custom validity error message for the specified input\n     element on the first \"input\" event using a one-shot handler. */\n    const handler = () => {\n      inputEl.setCustomValidity(\"\");\n      inputEl.removeEventListener(\"input\", handler);\n    };\n    inputEl.addEventListener(\"input\", handler);\n  }\n\n  private updateUser(userId: User[\"id\"], data: UserUpdate) {\n    this.clearErrors();\n    ArchAPI.users\n      .update(userId, data)\n      .then((user: User) => {\n        this.open = false;\n        // Invoke any registered onUpdate handler and catch/log any error\n        // to prevent triggering display of the modal error element.\n        try {\n          this.onUpdate(user);\n        } catch (e) {\n          console.error(e);\n        }\n      })\n      .catch((error: ResponseError) => {\n        if (error.response?.status !== 400) {\n          this.unhandledError = true;\n        } else {\n          error.response\n            .json()\n            .then((data: { details: string }) => {\n              const { details } = data;\n              // Maybe handle a duplicate email error.\n              if (details.endsWith(\"already exists for field (email)\")) {\n                this.emailInput.setCustomValidity(\n                  \"A user with this Email already exists.\"\n                );\n                this.emailInput.reportValidity();\n                this.clearInputValidityOnChange(this.emailInput);\n              } else {\n                this.unhandledError = true;\n              }\n            })\n            .catch(() => (this.unhandledError = true));\n        }\n      });\n  }\n\n  onOpenHandler(): void {\n    /* In profile mode, load the user data on each open. */\n    const { profileMode, userId } = this;\n    if (profileMode) {\n      void ArchAPI.users.get(userId).then((user) => (this.user = user));\n    }\n  }\n\n  onCloseHandler(): void {\n    /* Clear error on close, and in profile mode, set user=undefined to prevent\n       a flash of potentially-stale user data prior to fetch completion.\n     */\n    const { profileMode } = this;\n    this.form?.reset();\n    this.teamsSelector.reset();\n    this.clearErrors();\n    if (profileMode) {\n      this.user = undefined;\n    }\n  }\n}\n"],"names":["styles$1","global","css","ArchUserTeamsSelector","ArchSelectAdder","connectedCallback","this","reset","deselectButtonText","headingLevel","selectCtaText","valueGetter","x","String","id","labelGetter","name","super","willUpdate","changedProperties","has","accountTeams","userTeams","options","slice","selectedOptions","styles","__decorate","property","type","Array","prototype","customElement","ArchModal","Bootstrap4Alerts","ArchEditUserModal","constructor","profileMode","onUpdate","user","ArchAPI","teams","list","then","response","items","unhandledError","showError","errorEl","classList","add","remove","userId","undefined","content","html","userIsSelf","first_name","last_name","email","Object","entries","UserRoles","map","k","v","role","scrollable","modalSize","submitButtonText","title","addEventListener","onOpenHandler","bind","onCloseHandler","submit","form","teamsSelector","checkValidity","reportValidity","formData","FormData","parseInt","get","data","updateUser","clearErrors","emailInput","setCustomValidity","clearInputValidityOnChange","inputEl","handler","removeEventListener","users","update","open","e","console","error","catch","_a","status","json","details","endsWith","Number","Boolean","query","state"],"mappings":"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"}