{"version":3,"file":"arch-user-table.js","sources":["../../../../../web-components/src/archCreateNewUserModal/src/styles.ts","../../../../../web-components/src/archCreateNewUserModal/src/arch-create-new-user-modal.ts","../../../../../web-components/src/archUserTable/src/styles.ts","../../../../../web-components/src/archUserTable/src/arch-user-table.ts"],"sourcesContent":["import { css } from \"lit\";\n\nimport { Bootstrap4Alerts } from \"../../lib/styles\";\nimport { ArchModal } from \"../../archModal/index\";\n\nexport default [\n  ...ArchModal.styles,\n  Bootstrap4Alerts,\n  css`\n    form > label {\n      font-weight: normal;\n      margin-top: 0.5rem;\n      font-size: 0.95rem;\n    }\n\n    form > label:first-child {\n      margin-top: 0;\n    }\n\n    form > label > em {\n      display: block;\n      font-size: 0.9em;\n    }\n\n    form > input,\n    form > select {\n      box-sizing: border-box;\n      width: 100%;\n    }\n\n    form > label[for=\"send-email\"],\n    form > input#send-email {\n      display: inline-block;\n      width: auto;\n    }\n\n    form > label[for=\"send-email\"] {\n      margin-left: 0.5em;\n    }\n\n    div.error {\n      margin-top: 1rem;\n      padding: 0.5rem 0.75rem;\n      display: none;\n    }\n\n    div.error.show {\n      display: block;\n    }\n  `,\n];\n","import { html } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators.js\";\nimport ArchAPI from \"../../lib/ArchAPI\";\nimport { ResponseError, Team, User, UserRoles } from \"../../lib/types\";\n\nimport \"../../archUserTeamsSelector\";\nimport { ArchUserTeamsSelector } from \"../../archUserTeamsSelector\";\nimport { ArchModal } from \"../../archModal/index\";\n\nimport styles from \"./styles\";\n\n@customElement(\"arch-create-new-user-modal\")\nexport class ArchCreateNewUserModal extends ArchModal {\n  @property({ type: Number }) accountId!: number;\n  @property() onCreate!: () => void;\n\n  @query(\"form\") form!: HTMLFormElement;\n  @query(\"form > input#user-name\") usernameInput!: HTMLInputElement;\n  @query(\"form > input#user-email\") emailInput!: HTMLInputElement;\n  @query(\"div.error\") errorEl!: HTMLElement;\n\n  @query(\"arch-user-teams-selector\")\n  teamsSelector!: ArchUserTeamsSelector;\n\n  @state() accountTeams: Array<Team> = [];\n\n  constructor() {\n    super();\n    void ArchAPI.teams.list().then((response) => {\n      this.accountTeams = response.items;\n      this.renderContent();\n    });\n  }\n\n  private set unhandledError(showError: boolean) {\n    const { errorEl } = this;\n    if (showError) {\n      errorEl.classList.add(\"show\");\n    } else {\n      errorEl.classList.remove(\"show\");\n    }\n  }\n\n  static styles = styles;\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.scrollable = true;\n    this.modalSize = \"m\";\n    this.title = \"Create a New User\";\n    this.submitButtonText = \"Create\";\n    this.renderContent();\n    this.addEventListener(\"sp-closed\", this.onCloseHandler.bind(this));\n  }\n\n  renderContent() {\n    this.content = html`\n      <form validate>\n        <input type=\"hidden\" name=\"account-id\" value=${this.accountId} />\n\n        <label for=\"user-name\">\n          Username\n          <em>\n            150 characters or fewer. Letters, digits and &quot;@/./+/-/_&quot;\n            only\n          </em>\n        </label>\n        <input\n          id=\"user-name\"\n          name=\"user-name\"\n          type=\"text\"\n          pattern=\"[a-zA-Z0-9@.+-_]+\"\n          required\n          title='150 characters or fewer. Letters, digits and \"@/./+/-/_\" only'\n        />\n\n        <label for=\"first-name\">First Name</label>\n        <input id=\"first-name\" name=\"first-name\" type=\"text\" />\n\n        <label for=\"last-name\">Last Name</label>\n        <input id=\"last-name\" name=\"last-name\" type=\"text\" />\n\n        <label for=\"user-email\">Email</label>\n        <input id=\"user-email\" name=\"user-email\" type=\"email\" required />\n\n        <label for=\"user-role\">Role</label>\n        <select id=\"user-role\" name=\"user-role\" required>\n          ${Object.entries(UserRoles).map(\n            ([k, v]) => html`\n              <option value=\"${v}\" ?selected=${k === \"USER\"}>${k}</option>\n            `\n          )}\n        </select>\n\n        <label for=\"user-teams-selector\">Teams</label>\n        <arch-user-teams-selector\n          .accountTeams=${this.accountTeams}\n          .userTeams=${[]}\n          id=\"user-teams-selector\"\n        >\n        </arch-user-teams-selector>\n\n        <br />\n        <input type=\"checkbox\" id=\"send-email\" name=\"send-email\" checked />\n        <label for=\"send-email\">Send welcome email</label>\n      </form>\n\n      <div class=\"error alert-danger\">\n        Something went wrong. Please try again.\n      </div>\n    `;\n  }\n\n  submit() {\n    const { form, teamsSelector } = this;\n\n    // Validate the form and show any errors.\n    if (!form.checkValidity()) {\n      form.reportValidity();\n      return;\n    }\n\n    const formData = new FormData(this.form);\n    const data: Partial<User> = {\n      account_id: parseInt(formData.get(\"account-id\") as string),\n      email: formData.get(\"user-email\") as string,\n      first_name: formData.get(\"first-name\") as string,\n      last_name: formData.get(\"last-name\") as string,\n      role: formData.get(\"user-role\") as User[\"role\"],\n      username: formData.get(\"user-name\") as string,\n      teams: teamsSelector.selectedOptions.map((t) => ({\n        id: t.id,\n        name: t.name,\n      })),\n    };\n    this.createUser(data, formData.has(\"send-email\"));\n  }\n\n  private clearErrors() {\n    this.unhandledError = false;\n    if (this.form) {\n      this.usernameInput.setCustomValidity(\"\");\n      this.emailInput.setCustomValidity(\"\");\n    }\n  }\n\n  private clearInputValidityOnChange(inputEl: HTMLInputElement) {\n    /* Clear the custom validity error message for the specified input\n     element on the first \"input\" event using a one-shot handler. */\n    const handler = () => {\n      inputEl.setCustomValidity(\"\");\n      inputEl.removeEventListener(\"input\", handler);\n    };\n    inputEl.addEventListener(\"input\", handler);\n  }\n\n  private createUser(data: Partial<User>, sendWelcomeEmail: boolean) {\n    this.clearErrors();\n    ArchAPI.users\n      .create(data as User, sendWelcomeEmail)\n      .then(() => {\n        this.open = false;\n        this.onCreate();\n      })\n      .catch((error: ResponseError) => {\n        if (error.response?.status !== 400) {\n          // Use assignment to state property instead of mutation to avoid having\n          // to manually invoke this.requestUpdate().\n          this.unhandledError = true;\n        } else {\n          error.response\n            .json()\n            .then((data: { details: string }) => {\n              const { details } = data;\n              let unhandledError = true;\n              // Maybe handle a duplicate username error.\n              if (details.endsWith(\"already exists for field (username)\")) {\n                this.usernameInput.setCustomValidity(\n                  \"A user with this Username already exists.\"\n                );\n                this.usernameInput.reportValidity();\n                this.clearInputValidityOnChange(this.usernameInput);\n                unhandledError = false;\n              }\n\n              // Maybe handle a duplicate email error.\n              if (details.endsWith(\"already exists for field (email)\")) {\n                this.emailInput.setCustomValidity(\n                  \"A user with this Email already exists.\"\n                );\n                this.emailInput.reportValidity();\n                this.clearInputValidityOnChange(this.emailInput);\n                unhandledError = false;\n              }\n\n              // Maybe handle an account max_users error.\n              if (details === \"account max users limit reached\") {\n                this.usernameInput.setCustomValidity(\n                  \"Your account has reached its maximum number of allowed users\"\n                );\n                this.usernameInput.reportValidity();\n                this.clearInputValidityOnChange(this.usernameInput);\n                unhandledError = false;\n              }\n\n              // Maybe handle an unknown error.\n              this.unhandledError = unhandledError;\n            })\n            .catch(() => {\n              this.unhandledError = true;\n            });\n        }\n      });\n  }\n\n  onCloseHandler(): void {\n    // ensure any previously entered text in the form field\n    // is reset so it doesn't show on subsequent renders\n    this.form?.reset();\n    this.teamsSelector.reset();\n    this.clearErrors();\n  }\n}\n","import { css } from \"lit\";\n\nexport default [\n  css`\n    data-table > table {\n      table-layout: fixed;\n    }\n\n    data-table > table > thead > tr > th,\n    data-table > table > tbody > tr > td {\n      white-space: nowrap;\n      max-width: none;\n    }\n\n    data-table > table > thead > tr > th.date-created {\n      width: 8em;\n    }\n\n    data-table > table > thead > tr > th.last-login {\n      width: 8em;\n    }\n\n    data-table > table > thead > tr > th.role {\n      width: 5em;\n    }\n  `,\n];\n","import { PropertyValues } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators.js\";\n\nimport { User, UserRoles } from \"../../lib/types\";\nimport { isoStringToDateString, toTitleCase } from \"../../lib/helpers\";\nimport { Topics } from \"../../lib/pubsub\";\n\nimport { ArchDataTable } from \"../../archDataTable/index\";\n\nimport { ArchCreateNewUserModal } from \"../../archCreateNewUserModal/index\";\nimport { ArchEditUserModal } from \"../../archEditUserModal/index.js\";\n\nimport Styles from \"./styles.js\";\n\n@customElement(\"arch-user-table\")\nexport class ArchUserTable extends ArchDataTable<User> {\n  @property({ type: Number }) accountId!: number;\n  @property({ type: Number }) userId!: number;\n  @property({ type: Boolean }) userIsStaff!: boolean;\n  @property({ type: String }) userRole!: UserRoles;\n  @property({ type: Boolean }) accountMaxUsersReached = false;\n\n  @state() createNewUserModalTrigger!: HTMLElement;\n  @state() editUserModal!: ArchEditUserModal;\n  @state() editUserModalTrigger!: HTMLElement;\n\n  static styles = [...ArchDataTable.styles, ...Styles];\n\n  willUpdate(_changedProperties: PropertyValues) {\n    super.willUpdate(_changedProperties);\n    this.actionButtonDisabled = [false, false];\n    // Add selection action buttons if user is staff or admin.\n    const isStaffOrAdmin =\n      this.userIsStaff || this.userRole === UserRoles.ADMIN;\n    if (isStaffOrAdmin) {\n      this.actionButtonLabels = [\"Edit User\"];\n      this.actionButtonSignals = [Topics.DISPLAY_EDIT_USER_MODAL];\n    }\n    this.apiCollectionEndpoint = \"/users\";\n    this.apiStaticParamPairs = [];\n    this.cellRenderers = [\n      undefined,\n      // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n      (first_name, user) => {\n        const s = `${first_name as string} ${user.last_name}`;\n        return `<span title=\"${s}\">${s}</span>`;\n      },\n      undefined,\n      (date_joined) =>\n        date_joined ? isoStringToDateString(date_joined as string) : \"\",\n      (last_login) =>\n        last_login ? isoStringToDateString(last_login as string) : \"\",\n      (role) =>\n        Object.keys(UserRoles)[\n          Object.values(UserRoles).indexOf(role as UserRoles)\n        ],\n    ];\n    this.columns = [\n      \"username\",\n      \"first_name\",\n      \"email\",\n      \"date_joined\",\n      \"last_login\",\n      \"role\",\n    ];\n    this.columnHeaders = [\n      \"Username\",\n      \"Full Name\",\n      \"Email\",\n      \"Date Created\",\n      \"Last Login\",\n      \"Role\",\n    ];\n    this.filterableColumns = [false, false, false, false, false, true];\n    this.pageLength = 50;\n    this.persistSearchStateInUrl = true;\n    this.pluralName = \"Account Users\";\n    this.rowClickEnabled = true;\n    this.searchColumns = [\"username\", \"first_name\", \"last_name\", \"email\"];\n    this.searchColumnLabels = this.searchColumns.map(toTitleCase);\n    this.selectable = isStaffOrAdmin;\n    this.singleName = \"Account User\";\n    this.sort = \"username,role\";\n    this.sortableColumns = [true, true, true, true, true, true];\n\n    // Display \"Create User\" button to staff / admin users.\n    if (isStaffOrAdmin) {\n      this.nonSelectionActions = [Topics.DISPLAY_CREATE_USER_MODAL];\n      this.nonSelectionActionLabels = [\"Create New User\"];\n    }\n  }\n\n  _createHiddenModalTriggerButton(): HTMLButtonElement {\n    const el = document.createElement(\"button\");\n    el.setAttribute(\"slot\", \"trigger\");\n    el.style.display = \"none\";\n    return el;\n  }\n\n  render() {\n    // Instantiate the user create modal and create a trigger element.\n    const createNewUserModal = new ArchCreateNewUserModal();\n    createNewUserModal.accountId = this.accountId;\n    createNewUserModal.onCreate = () => void this.dataTable.throttledDoSearch();\n    this.createNewUserModalTrigger = this._createHiddenModalTriggerButton();\n    createNewUserModal.appendChild(this.createNewUserModalTrigger);\n\n    // Instantiate the edit user modal and create a trigger element.\n    this.editUserModal = new ArchEditUserModal();\n    this.editUserModal.userId = this.userId;\n    this.editUserModal.onUpdate = () => void this.dataTable.throttledDoSearch();\n    this.editUserModalTrigger = this._createHiddenModalTriggerButton();\n    this.editUserModal.appendChild(this.editUserModalTrigger);\n\n    return [\n      super.render(),\n      createNewUserModal,\n      this.editUserModal,\n    ] as Array<HTMLElement>;\n  }\n\n  updated(_changedProperties: PropertyValues) {\n    super.updated(_changedProperties);\n\n    // If account max users has been reached, disable the Create New User button.\n    if (this.accountMaxUsersReached) {\n      const createNewUserButton = this.dataTable.querySelector(\n        \"div.non-selection-buttons button\"\n      ) as HTMLButtonElement;\n      createNewUserButton.disabled = true;\n      createNewUserButton.title =\n        \"Your account has reached its maximum number of allowed users. Please contact your account administrator.\";\n    }\n  }\n\n  showEditUserModal(user: User) {\n    this.editUserModal.user = user;\n    this.editUserModalTrigger.click();\n  }\n\n  selectionActionHandler(action: string, selectedRows: Array<User>) {\n    switch (action as Topics) {\n      case Topics.DISPLAY_EDIT_USER_MODAL:\n        this.showEditUserModal(selectedRows[0]);\n        break;\n      default:\n        break;\n    }\n  }\n\n  nonSelectionActionHandler(action: string) {\n    switch (action as Topics) {\n      case Topics.DISPLAY_CREATE_USER_MODAL:\n        this.createNewUserModalTrigger.click();\n        break;\n      default:\n        break;\n    }\n  }\n\n  postSelectionChangeHandler(selectedRows: Array<User>) {\n    /* Update DataTable.actionButtonDisabled based on the number\n       of selected rows.\n    */\n    const { dataTable } = this;\n    const { props } = dataTable;\n    const numSelected = selectedRows.length;\n    const editUserEnabled = numSelected === 1;\n    props.actionButtonDisabled = [!editUserEnabled];\n    dataTable.setSelectionActionButtonDisabledState(numSelected === 0);\n  }\n}\n\n// Injects the <ait-user-table> tag into the global name space\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"arch-user-table\": ArchUserTable;\n  }\n}\n"],"names":["styles","ArchModal","Bootstrap4Alerts","css","ArchCreateNewUserModal","constructor","super","this","accountTeams","ArchAPI","teams","list","then","response","items","renderContent","unhandledError","showError","errorEl","classList","add","remove","connectedCallback","scrollable","modalSize","title","submitButtonText","addEventListener","onCloseHandler","bind","content","html","accountId","Object","entries","UserRoles","map","k","v","submit","form","teamsSelector","checkValidity","reportValidity","formData","FormData","data","account_id","parseInt","get","email","first_name","last_name","role","username","selectedOptions","t","id","name","createUser","has","clearErrors","usernameInput","setCustomValidity","emailInput","clearInputValidityOnChange","inputEl","handler","removeEventListener","sendWelcomeEmail","users","create","open","onCreate","catch","error","_a","status","json","details","endsWith","reset","__decorate","property","type","Number","prototype","query","state","customElement","Styles","ArchUserTable","ArchDataTable","accountMaxUsersReached","willUpdate","_changedProperties","actionButtonDisabled","isStaffOrAdmin","userIsStaff","userRole","ADMIN","actionButtonLabels","actionButtonSignals","Topics","DISPLAY_EDIT_USER_MODAL","apiCollectionEndpoint","apiStaticParamPairs","cellRenderers","undefined","user","s","date_joined","isoStringToDateString","last_login","keys","values","indexOf","columns","columnHeaders","filterableColumns","pageLength","persistSearchStateInUrl","pluralName","rowClickEnabled","searchColumns","searchColumnLabels","toTitleCase","selectable","singleName","sort","sortableColumns","nonSelectionActions","DISPLAY_CREATE_USER_MODAL","nonSelectionActionLabels","_createHiddenModalTriggerButton","el","document","createElement","setAttribute","style","display","render","createNewUserModal","dataTable","throttledDoSearch","createNewUserModalTrigger","appendChild","editUserModal","ArchEditUserModal","userId","onUpdate","editUserModalTrigger","updated","createNewUserButton","querySelector","disabled","showEditUserModal","click","selectionActionHandler","action","selectedRows","nonSelectionActionHandler","postSelectionChangeHandler","props","numSelected","length","editUserEnabled","setSelectionActionButtonDisabledState","Boolean","String"],"mappings":"upBAKA,IAAeA,EAAA,IACVC,EAAUD,OACbE,EACAC,CAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KCIE,IAAMC,EAAN,cAAqCH,EAc1CI,cACEC,QAHOC,KAAYC,aAAgB,GAI9BC,EAAQC,MAAMC,OAAOC,MAAMC,IAC9BN,KAAKC,aAAeK,EAASC,MAC7BP,KAAKQ,eAAe,GAEvB,CAEWC,mBAAeC,GACzB,MAAMC,QAAEA,GAAYX,KAChBU,EACFC,EAAQC,UAAUC,IAAI,QAEtBF,EAAQC,UAAUE,OAAO,OAE5B,CAIDC,oBACEhB,MAAMgB,oBACNf,KAAKgB,YAAa,EAClBhB,KAAKiB,UAAY,IACjBjB,KAAKkB,MAAQ,oBACblB,KAAKmB,iBAAmB,SACxBnB,KAAKQ,gBACLR,KAAKoB,iBAAiB,YAAapB,KAAKqB,eAAeC,KAAKtB,MAC7D,CAEDQ,gBACER,KAAKuB,QAAUC,CAAI;;uDAEgCxB,KAAKyB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YA6BhDC,OAAOC,QAAQC,GAAWC,KAC1B,EAAEC,EAAGC,KAAOP,CAAI;+BACGO,gBAAsB,SAAND,KAAgBA;;;;;;0BAOrC9B,KAAKC;uBACR;;;;;;;;;;;;;KAcpB,CAED+B,SACE,MAAMC,KAAEA,EAAIC,cAAEA,GAAkBlC,KAGhC,IAAKiC,EAAKE,gBAER,YADAF,EAAKG,iBAIP,MAAMC,EAAW,IAAIC,SAAStC,KAAKiC,MAC7BM,EAAsB,CAC1BC,WAAYC,SAASJ,EAASK,IAAI,eAClCC,MAAON,EAASK,IAAI,cACpBE,WAAYP,EAASK,IAAI,cACzBG,UAAWR,EAASK,IAAI,aACxBI,KAAMT,EAASK,IAAI,aACnBK,SAAUV,EAASK,IAAI,aACvBvC,MAAO+B,EAAcc,gBAAgBnB,KAAKoB,IAAO,CAC/CC,GAAID,EAAEC,GACNC,KAAMF,EAAEE,UAGZnD,KAAKoD,WAAWb,EAAMF,EAASgB,IAAI,cACpC,CAEOC,cACNtD,KAAKS,gBAAiB,EAClBT,KAAKiC,OACPjC,KAAKuD,cAAcC,kBAAkB,IACrCxD,KAAKyD,WAAWD,kBAAkB,IAErC,CAEOE,2BAA2BC,GAGjC,MAAMC,EAAU,KACdD,EAAQH,kBAAkB,IAC1BG,EAAQE,oBAAoB,QAASD,EAAQ,EAE/CD,EAAQvC,iBAAiB,QAASwC,EACnC,CAEOR,WAAWb,EAAqBuB,GACtC9D,KAAKsD,cACLpD,EAAQ6D,MACLC,OAAOzB,EAAcuB,GACrBzD,MAAK,KACJL,KAAKiE,MAAO,EACZjE,KAAKkE,UAAU,IAEhBC,OAAOC,UACyB,OAAX,UAAhBA,EAAM9D,gBAAU,IAAA+D,OAAA,EAAAA,EAAAC,QAGlBtE,KAAKS,gBAAiB,EAEtB2D,EAAM9D,SACHiE,OACAlE,MAAMkC,IACL,MAAMiC,QAAEA,GAAYjC,EACpB,IAAI9B,GAAiB,EAEjB+D,EAAQC,SAAS,yCACnBzE,KAAKuD,cAAcC,kBACjB,6CAEFxD,KAAKuD,cAAcnB,iBACnBpC,KAAK0D,2BAA2B1D,KAAKuD,eACrC9C,GAAiB,GAIf+D,EAAQC,SAAS,sCACnBzE,KAAKyD,WAAWD,kBACd,0CAEFxD,KAAKyD,WAAWrB,iBAChBpC,KAAK0D,2BAA2B1D,KAAKyD,YACrChD,GAAiB,GAIH,oCAAZ+D,IACFxE,KAAKuD,cAAcC,kBACjB,gEAEFxD,KAAKuD,cAAcnB,iBACnBpC,KAAK0D,2BAA2B1D,KAAKuD,eACrC9C,GAAiB,GAInBT,KAAKS,eAAiBA,CAAc,IAErC0D,OAAM,KACLnE,KAAKS,gBAAiB,CAAI,GAE/B,GAEN,CAEDY,uBAGa,QAAXgD,EAAArE,KAAKiC,YAAM,IAAAoC,GAAAA,EAAAK,QACX1E,KAAKkC,cAAcwC,QACnB1E,KAAKsD,aACN,GAlLMzD,EAAMJ,OAAGA,EA9BYkF,EAAA,CAA3BC,EAAS,CAAEC,KAAMC,UAA6BjF,EAAAkF,UAAA,iBAAA,GACnCJ,EAAA,CAAXC,KAAiC/E,EAAAkF,UAAA,gBAAA,GAEnBJ,EAAA,CAAdK,EAAM,SAA+BnF,EAAAkF,UAAA,YAAA,GACLJ,EAAA,CAAhCK,EAAM,2BAA2DnF,EAAAkF,UAAA,qBAAA,GAChCJ,EAAA,CAAjCK,EAAM,4BAAyDnF,EAAAkF,UAAA,kBAAA,GAC5CJ,EAAA,CAAnBK,EAAM,cAAmCnF,EAAAkF,UAAA,eAAA,GAG1CJ,EAAA,CADCK,EAAM,6BAC+BnF,EAAAkF,UAAA,qBAAA,GAE7BJ,EAAA,CAARM,KAAuCpF,EAAAkF,UAAA,oBAAA,GAZ7BlF,EAAsB8E,EAAA,CADlCO,EAAc,+BACFrF,GCVb,IAAesF,EAAA,CACbvF,CAAG;;;;;;;;;;;;;;;;;;;;;;KCYE,IAAMwF,EAAN,cAA4BC,EAA5BvF,kCAKwBE,KAAsBsF,wBAAG,CAuJvD,CA/ICC,WAAWC,GACTzF,MAAMwF,WAAWC,GACjBxF,KAAKyF,qBAAuB,EAAC,GAAO,GAEpC,MAAMC,EACJ1F,KAAK2F,aAAe3F,KAAK4F,WAAahE,EAAUiE,MAC9CH,IACF1F,KAAK8F,mBAAqB,CAAC,aAC3B9F,KAAK+F,oBAAsB,CAACC,EAAOC,0BAErCjG,KAAKkG,sBAAwB,SAC7BlG,KAAKmG,oBAAsB,GAC3BnG,KAAKoG,cAAgB,MACnBC,EAEA,CAACzD,EAAY0D,KACX,MAAMC,EAAI,GAAG3D,KAAwB0D,EAAKzD,YAC1C,MAAO,gBAAgB0D,MAAMA,UAAU,OAEzCF,EACCG,GACCA,EAAcC,EAAsBD,GAAyB,GAC9DE,GACCA,EAAaD,EAAsBC,GAAwB,GAC5D5D,GACCpB,OAAOiF,KAAK/E,GACVF,OAAOkF,OAAOhF,GAAWiF,QAAQ/D,KAGvC9C,KAAK8G,QAAU,CACb,WACA,aACA,QACA,cACA,aACA,QAEF9G,KAAK+G,cAAgB,CACnB,WACA,YACA,QACA,eACA,aACA,QAEF/G,KAAKgH,kBAAoB,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAC7DhH,KAAKiH,WAAa,GAClBjH,KAAKkH,yBAA0B,EAC/BlH,KAAKmH,WAAa,gBAClBnH,KAAKoH,iBAAkB,EACvBpH,KAAKqH,cAAgB,CAAC,WAAY,aAAc,YAAa,SAC7DrH,KAAKsH,mBAAqBtH,KAAKqH,cAAcxF,IAAI0F,GACjDvH,KAAKwH,WAAa9B,EAClB1F,KAAKyH,WAAa,eAClBzH,KAAK0H,KAAO,gBACZ1H,KAAK2H,gBAAkB,EAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAGlDjC,IACF1F,KAAK4H,oBAAsB,CAAC5B,EAAO6B,2BACnC7H,KAAK8H,yBAA2B,CAAC,mBAEpC,CAEDC,kCACE,MAAMC,EAAKC,SAASC,cAAc,UAGlC,OAFAF,EAAGG,aAAa,OAAQ,WACxBH,EAAGI,MAAMC,QAAU,OACZL,CACR,CAEDM,SAEE,MAAMC,EAAqB,IAAI1I,EAa/B,OAZA0I,EAAmB9G,UAAYzB,KAAKyB,UACpC8G,EAAmBrE,SAAW,KAAWlE,KAAKwI,UAAUC,mBAAmB,EAC3EzI,KAAK0I,0BAA4B1I,KAAK+H,kCACtCQ,EAAmBI,YAAY3I,KAAK0I,2BAGpC1I,KAAK4I,cAAgB,IAAIC,EACzB7I,KAAK4I,cAAcE,OAAS9I,KAAK8I,OACjC9I,KAAK4I,cAAcG,SAAW,KAAW/I,KAAKwI,UAAUC,mBAAmB,EAC3EzI,KAAKgJ,qBAAuBhJ,KAAK+H,kCACjC/H,KAAK4I,cAAcD,YAAY3I,KAAKgJ,sBAE7B,CACLjJ,MAAMuI,SACNC,EACAvI,KAAK4I,cAER,CAEDK,QAAQzD,GAIN,GAHAzF,MAAMkJ,QAAQzD,GAGVxF,KAAKsF,uBAAwB,CAC/B,MAAM4D,EAAsBlJ,KAAKwI,UAAUW,cACzC,oCAEFD,EAAoBE,UAAW,EAC/BF,EAAoBhI,MAClB,0GACH,CACF,CAEDmI,kBAAkB/C,GAChBtG,KAAK4I,cAActC,KAAOA,EAC1BtG,KAAKgJ,qBAAqBM,OAC3B,CAEDC,uBAAuBC,EAAgBC,GACrC,GAAQD,IACDxD,EAAOC,wBACVjG,KAAKqJ,kBAAkBI,EAAa,GAKzC,CAEDC,0BAA0BF,GACxB,GAAQA,IACDxD,EAAO6B,0BACV7H,KAAK0I,0BAA0BY,OAKpC,CAEDK,2BAA2BF,GAIzB,MAAMjB,UAAEA,GAAcxI,MAChB4J,MAAEA,GAAUpB,EACZqB,EAAcJ,EAAaK,OAC3BC,EAAkC,IAAhBF,EACxBD,EAAMnE,qBAAuB,EAAEsE,GAC/BvB,EAAUwB,sCAAsD,IAAhBH,EACjD,GAhJMzE,EAAM3F,OAAG,IAAI4F,EAAc5F,UAAW0F,GAVjBR,EAAA,CAA3BC,EAAS,CAAEC,KAAMC,UAA6BM,EAAAL,UAAA,iBAAA,GACnBJ,EAAA,CAA3BC,EAAS,CAAEC,KAAMC,UAA0BM,EAAAL,UAAA,cAAA,GACfJ,EAAA,CAA5BC,EAAS,CAAEC,KAAMoF,WAAiC7E,EAAAL,UAAA,mBAAA,GACvBJ,EAAA,CAA3BC,EAAS,CAAEC,KAAMqF,UAA+B9E,EAAAL,UAAA,gBAAA,GACpBJ,EAAA,CAA5BC,EAAS,CAAEC,KAAMoF,WAA0C7E,EAAAL,UAAA,8BAAA,GAEnDJ,EAAA,CAARM,KAAgDG,EAAAL,UAAA,iCAAA,GACxCJ,EAAA,CAARM,KAA0CG,EAAAL,UAAA,qBAAA,GAClCJ,EAAA,CAARM,KAA2CG,EAAAL,UAAA,4BAAA,GATjCK,EAAaT,EAAA,CADzBO,EAAc,oBACFE"}