import{R as t,b as e}from"./chunk-helpers.js";class s{static getCsrfHeader(){const t=s.CSRF_REGEX.exec(decodeURIComponent(document.cookie));return t?{"X-CSRFToken":t[1]}:{}}static async jsonRequest(a,n,o,i,c){const r=o?"?"+new URLSearchParams(o.map((([t,e,s])=>[`${String(t)}${"!="===e?"!":""}`,String(s)]))).toString():"";let u={accept:"application/json","content-type":"application/json"},d=null;"GET"!==a&&(u={...u,...s.getCsrfHeader()},i&&(d=JSON.stringify(i)));const l=await fetch(`${s.BasePath}${n}${r}`,{method:a,headers:u,body:d});if(!l.ok)throw new t(l);return 202===l.status||204===l.status?null:(c||e)(await l.json())}static get collections(){return{get:(t=[])=>s.jsonRequest("GET","/collections",t)}}static get jobs(){return{run:(t,e,a)=>s.jsonRequest("POST","/datasets/generate",void 0,{collection_id:t,job_type_id:e,params:a})}}static get datasets(){return{get:(t=[])=>s.jsonRequest("GET","/datasets",t),updateTeams:(t,e)=>s.jsonRequest("POST",`/datasets/${t}/teams`,void 0,e),publication:{info:t=>s.jsonRequest("GET",`/datasets/${t}/publication`,void 0,void 0,(t=>{const e=Object.assign({},t);return e.time=new Date(t.time),e})),metadata:{get:t=>s.jsonRequest("GET",`/datasets/${t}/publication/metadata`),update:(t,e)=>s.jsonRequest("POST",`/datasets/${t}/publication/metadata`,void 0,e)},unpublish:t=>s.jsonRequest("DELETE",`/datasets/${t}/publication`)}}}static get users(){return{get:t=>s.jsonRequest("GET",`/users/${t}`),create:(t,e)=>s.jsonRequest("PUT",`/users?send_welcome=${JSON.stringify(e)}`,void 0,t),update:(t,e)=>s.jsonRequest("PATCH",`/users/${t}`,void 0,e)}}static async allCollectionIdNamePairs(t){return(await s.jsonRequest("GET","/collections",[["account_id","=",t]])).items.map((t=>[t.id,t.name]))}}s.BasePath="/api",s.CSRF_REGEX=/csrftoken=([^;$]+)/;export{s as A};
//# sourceMappingURL=chunk-ArchAPI.js.map
