{"version":3,"file":"collection-surveyor-cart.js","sources":["../../../../../web-components/src/collectionSurveyorCart/src/collection-surveyor-cart.ts"],"sourcesContent":["import { html, css, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators.js\";\n\nimport { CollectionSelectedDetail } from \"../../lib/types\";\n\nimport { humanBytes } from \"../../lib/webservices/src/lib/helpers\";\n\n@customElement(\"collection-surveyor-cart\")\nexport class CollectionSurveyorCart extends LitElement {\n  @property({ type: Object })\n  collectionsInCart: { [collectionName: string]: CollectionSelectedDetail } =\n    {};\n\n  private get totalCollectionSizeSelected(): number {\n    // sum collectionSize (bytes) from each selected collection\n    const collectionSum = Object.values(this.collectionsInCart).reduce(\n      (current, acc) => current + Number(acc.collectionSize),\n      0\n    );\n\n    return collectionSum;\n  }\n\n  handleRemoveCollectionFromCart(collectionName: string) {\n    this.dispatchEvent(\n      new CustomEvent(\"collection-removed-from-cart\", {\n        bubbles: true,\n        composed: true,\n        detail: { collectionName },\n      })\n    );\n  }\n\n  render() {\n    return html`\n      <div class=\"cart-container\">\n        <div class=\"collections-cart \">\n          <h3>Collections Selected:</h3>\n          <ul>\n            ${Object.entries(this.collectionsInCart).map(\n              ([collectionName, value]) => html`\n                <li>\n                  ${collectionName}, Collection ID: ${value.collectionId},\n                  Collection Size: ${humanBytes(Number(value.collectionSize))}\n                  <button\n                    @click=${() =>\n                      this.handleRemoveCollectionFromCart(collectionName)}\n                  >\n                    remove\n                  </button>\n                </li>\n              `\n            )}\n          </ul>\n          <h3>\n            Total Collection Size Selected:\n            <span class=\"totalSizeSelected\"\n              >${humanBytes(this.totalCollectionSizeSelected)}</span\n            >\n          </h3>\n        </div>\n      </div>\n    `;\n  }\n\n  static styles = css`\n    .cart-container {\n      padding: 20px 50px;\n    }\n    .collections-cart {\n      padding: 20px;\n      border-radius: 6px;\n      background-color: rgb(255, 255, 255);\n      box-shadow: rgb(136, 136, 136) 1px 1px 6px;\n    }\n    .totalSizeSelected {\n      font-weight: normal;\n    }\n    button {\n      background: none;\n      border: none;\n      cursor: pointer;\n      color: red;\n      text-decoration: underline;\n    }\n  `;\n}\n"],"names":["CollectionSurveyorCart","LitElement","constructor","this","collectionsInCart","totalCollectionSizeSelected","Object","values","reduce","current","acc","Number","collectionSize","handleRemoveCollectionFromCart","collectionName","dispatchEvent","CustomEvent","bubbles","composed","detail","render","html","entries","map","value","collectionId","humanBytes","styles","css","__decorate","property","type","prototype","customElement"],"mappings":"iIAQO,IAAMA,EAAN,cAAqCC,EAArCC,kCAELC,KAAiBC,kBACf,EA2EH,CAzEaC,kCAOV,OALsBC,OAAOC,OAAOJ,KAAKC,mBAAmBI,QAC1D,CAACC,EAASC,IAAQD,EAAUE,OAAOD,EAAIE,iBACvC,EAIH,CAEDC,+BAA+BC,GAC7BX,KAAKY,cACH,IAAIC,YAAY,+BAAgC,CAC9CC,SAAS,EACTC,UAAU,EACVC,OAAQ,CAAEL,oBAGf,CAEDM,SACE,OAAOC,CAAI;;;;;cAKDf,OAAOgB,QAAQnB,KAAKC,mBAAmBmB,KACvC,EAAET,EAAgBU,KAAWH,CAAI;;oBAE3BP,qBAAkCU,EAAMC;qCACvBC,EAAWf,OAAOa,EAAMZ;;6BAEhC,IACPT,KAAKU,+BAA+BC;;;;;;;;;;iBAWzCY,EAAWvB,KAAKE;;;;;KAM9B,GAEML,EAAM2B,OAAGC,CAAG;;;;;;;;;;;;;;;;;;;;IAvDnBC,EAAA,CADCC,EAAS,CAAEC,KAAMzB,UAEbN,EAAAgC,UAAA,yBAAA,GAHMhC,EAAsB6B,EAAA,CADlCI,EAAc,6BACFjC"}