{"version":3,"file":"chunk-arch-select-adder.js","sources":["../../../../../web-components/src/archSelectAdder/src/arch-select-adder.ts"],"sourcesContent":["import { LitElement, TemplateResult, html } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators.js\";\n\nimport { DefaultSelectElementPromptText } from \"../../lib/constants\";\n\n@customElement(\"arch-select-adder\")\nexport class ArchSelectAdder<T> extends LitElement {\n  @property({ type: String }) deselectButtonText = \"remove\";\n  @property({ type: Number }) headingLevel = 3;\n  @property() labelGetter!: (obj: T) => string;\n  @property({ type: Array }) options!: Array<T>;\n  @property() optionsSortCompareFn: undefined | ((a: T, b: T) => number) =\n    undefined;\n  @property({ type: Array }) selectedOptions!: Array<T>;\n  @property({ type: Array }) selectedOptionsTitle = \"Selected Options\";\n  @property({ type: String }) selectCtaText = \"Select value to add\";\n  @property() valueGetter!: (obj: T) => string;\n\n  @state() availableOptions: Array<T> = [];\n  @state() disabled = false;\n\n  // Set delegatesFocus=true so that we can restore focus to the job button\n  // on arch-global-modal close.\n  static shadowRootOptions = {\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n  };\n\n  private sortByLabel(a: T, b: T) {\n    /* Default optionsSortCompareFn */\n    const { labelGetter } = this;\n    const aLabel = labelGetter(a);\n    const bLabel = labelGetter(b);\n    if (aLabel > bLabel) {\n      return 1;\n    } else if (aLabel < bLabel) {\n      return -1;\n    } else {\n      return 0;\n    }\n  }\n\n  private heading(text: string): TemplateResult {\n    const { headingLevel } = this;\n    switch (headingLevel) {\n      case 1:\n        return html`<h1>${text}</h1>`;\n        break;\n      case 2:\n        return html`<h2>${text}</h2>`;\n        break;\n      case 3:\n        return html`<h3>${text}</h3>`;\n        break;\n      case 4:\n        return html`<h4>${text}</h4>`;\n        break;\n      case 5:\n        return html`<h5>${text}</h5>`;\n        break;\n      case 6:\n        return html`<h6>${text}</h6>`;\n        break;\n      default:\n        return html``;\n    }\n  }\n\n  render() {\n    const {\n      deselectButtonText,\n      disabled,\n      labelGetter,\n      selectCtaText,\n      selectedOptions,\n      selectedOptionsTitle,\n      valueGetter,\n    } = this;\n\n    this.updateAvailableOptions();\n\n    return html`\n      ${selectedOptions.length === 0\n        ? html``\n        : html`\n            ${this.heading(selectedOptionsTitle)}\n            <ul>\n              ${selectedOptions.map(\n                (x) =>\n                  html`<li>\n                    ${labelGetter(x)}<button\n                      ?disabled=${disabled}\n                      @click=${(e: Event) =>\n                        this.deselectOption(e.target as HTMLButtonElement, x)}\n                    >\n                      ${deselectButtonText}\n                    </button>\n                  </li>`\n              )}\n            </ul>\n          `}\n      ${this.availableOptions.length === 0\n        ? html``\n        : html`\n            <label>\n              ${selectCtaText}\n              <select ?disabled=${disabled} @change=${this.selectHandler}>\n                <option selected value>\n                  ${DefaultSelectElementPromptText}\n                </option>\n                ${this.availableOptions.map(\n                  (x) =>\n                    html`<option value=\"${valueGetter(x)}\">\n                      ${labelGetter(x)}\n                    </option>`\n                )}\n              </select>\n            </label>\n          `}\n    `;\n  }\n\n  updateAvailableOptions() {\n    const { options, optionsSortCompareFn, selectedOptions, valueGetter } =\n      this;\n    const selectedValues = new Set(selectedOptions.map(valueGetter));\n    this.availableOptions = options\n      .filter((x) => !selectedValues.has(valueGetter(x)))\n      .sort(optionsSortCompareFn ?? this.sortByLabel.bind(this));\n  }\n\n  private selectOption(option: T) {\n    this.selectedOptions.push(option);\n    this.updateAvailableOptions();\n  }\n\n  private get revertFn() {\n    /* Return a function that can be used to revert to the current state. */\n    const currentSelectedOptions = [...this.selectedOptions];\n    return () => {\n      this.selectedOptions = currentSelectedOptions;\n      this.updateAvailableOptions();\n    };\n  }\n\n  private deselectOption(buttonEl: HTMLButtonElement, option: T) {\n    const { revertFn, valueGetter } = this;\n    const optionValue = valueGetter(option);\n    this.selectedOptions = this.selectedOptions.filter(\n      (x) => valueGetter(x) !== optionValue\n    );\n    this.updateAvailableOptions();\n    this.onChange(revertFn, buttonEl);\n  }\n\n  private selectHandler(e: Event) {\n    const { options, revertFn, valueGetter } = this;\n    const selectEl = e.target as HTMLSelectElement;\n    const optionValue = selectEl.value;\n    // Ignore the first placeholder option.\n    if (optionValue === \"\") {\n      return;\n    }\n    this.selectOption(\n      options.find((x) => String(valueGetter(x)) === optionValue) as T\n    );\n    // Ensure that the first, placeholder option is reselected.\n    (selectEl.children[0] as HTMLOptionElement).selected = true;\n    this.onChange(revertFn, selectEl);\n  }\n\n  /**\n   * @param {() => void} revertFn - revert to the previous selected option state\n   * @param {HTMLElement} srcEl - the interactive element that triggered the change\n   */\n  // eslint-disable-next-line @typescript-eslint/no-empty-function, @typescript-eslint/no-unused-vars\n  onChange(revertFn: () => void, srcEl: HTMLElement) {}\n}\n"],"names":["ArchSelectAdder","LitElement","constructor","this","deselectButtonText","headingLevel","optionsSortCompareFn","undefined","selectedOptionsTitle","selectCtaText","availableOptions","disabled","sortByLabel","a","b","labelGetter","aLabel","bLabel","heading","text","html","render","selectedOptions","valueGetter","updateAvailableOptions","length","map","x","e","deselectOption","target","selectHandler","DefaultSelectElementPromptText","options","selectedValues","Set","filter","has","sort","bind","selectOption","option","push","revertFn","currentSelectedOptions","buttonEl","optionValue","onChange","selectEl","value","find","String","children","selected","srcEl","shadowRootOptions","delegatesFocus","__decorate","property","type","prototype","Number","Array","state","customElement"],"mappings":"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"}