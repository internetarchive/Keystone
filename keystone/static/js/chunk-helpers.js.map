{"version":3,"file":"chunk-helpers.js","sources":["../../../../../web-components/src/lib/constants.ts","../../../../../web-components/src/lib/helpers.ts"],"sourcesContent":["import { CollectionType, ProcessingState } from \"./types\";\n\nexport const HtmlStatusCodeRegex = /^[1-5]\\d\\d$/;\n\n// SurtRegex: domain labels separated by commas optionally followed by \")\" or \")/.*\"\nconst ValidLabelChars = \"[a-zA-Z0-9\\\\-]\";\nexport const SurtPrefixRegex = new RegExp(\n  `^${ValidLabelChars}+,${ValidLabelChars}+(${ValidLabelChars}+,?)*((\\\\))|(\\\\)/.*))?$`\n);\n\nexport const BoolDisplayMap: Record<string, string> = {\n  true: \"Yes\",\n  false: \"No\",\n};\n\nexport const EventTypeDisplayMap: Record<ProcessingState, string> = {\n  SUBMITTED: \"Submitted\",\n  QUEUED: \"Queued\",\n  RUNNING: \"Running\",\n  FINISHED: \"Finished\",\n  FAILED: \"Failed\",\n  CANCELLED: \"Cancelled\",\n};\n\nexport const CollectionTypeDisplayMap: Record<CollectionType, string> = {\n  AIT: \"Archive-It\",\n  CUSTOM: \"Custom\",\n  SPECIAL: \"Special\",\n};\n\n// The URL params to use for specifying a single Collection.id value.\nexport const UrlCollectionParamName = \"cid\";\n\n// The URL params to use for specifying an array of Collection.id values.\nexport const UrlCollectionsParamName = \"cid[]\";\n","export * from \"./webservices/src/lib/helpers\";\n\nimport { UrlCollectionParamName, UrlCollectionsParamName } from \"./constants\";\nimport { Collection, Dataset, ProcessingState } from \"./types\";\n\nexport const identity = <T>(x: T) => x;\n\nexport const Paths = {\n  collection: (id: Collection[\"id\"]) => `/collections/${id}`,\n\n  collections: `/collections`,\n\n  dataset: (id: Dataset[\"id\"]) => `/datasets/${id}`,\n\n  datasets: `/datasets`,\n\n  generateCollectionDataset: (collectionId: Collection[\"id\"]) =>\n    `/datasets/generate?${UrlCollectionParamName}=${collectionId}`,\n\n  buildSubCollection: (sourceCollectionIds?: Array<Collection[\"id\"]>) =>\n    sourceCollectionIds === undefined\n      ? \"/collections/custom-collection-builder\"\n      : `/collections/custom-collection-builder?${sourceCollectionIds\n          .map((x) => `${UrlCollectionsParamName}=${x}`)\n          .join(\"&\")}`,\n};\n\nexport function isActiveProcessingState(state: ProcessingState): boolean {\n  return (\n    state === ProcessingState.SUBMITTED ||\n    state === ProcessingState.QUEUED ||\n    state === ProcessingState.RUNNING\n  );\n}\n"],"names":["HtmlStatusCodeRegex","ValidLabelChars","SurtPrefixRegex","RegExp","BoolDisplayMap","true","false","EventTypeDisplayMap","SUBMITTED","QUEUED","RUNNING","FINISHED","FAILED","CANCELLED","CollectionTypeDisplayMap","AIT","CUSTOM","SPECIAL","UrlCollectionParamName","UrlCollectionsParamName","identity","x","Paths","collection","id","collections","dataset","datasets","generateCollectionDataset","collectionId","buildSubCollection","sourceCollectionIds","undefined","map","join","isActiveProcessingState","state","ProcessingState"],"mappings":"qCAEO,MAAMA,EAAsB,cAG7BC,EAAkB,iBACXC,EAAkB,IAAIC,OACjC,IAAIF,MAAoBA,MAAoBA,4BAGjCG,EAAyC,CACpDC,KAAM,MACNC,MAAO,MAGIC,EAAuD,CAClEC,UAAW,YACXC,OAAQ,SACRC,QAAS,UACTC,SAAU,WACVC,OAAQ,SACRC,UAAW,aAGAC,EAA2D,CACtEC,IAAK,aACLC,OAAQ,SACRC,QAAS,WAIEC,EAAyB,MAGzBC,EAA0B,QC7B1BC,EAAeC,GAASA,EAExBC,EAAQ,CACnBC,WAAaC,GAAyB,gBAAgBA,IAEtDC,YAAa,eAEbC,QAAUF,GAAsB,aAAaA,IAE7CG,SAAU,YAEVC,0BAA4BC,GAC1B,0BAAgDA,IAElDC,mBAAqBC,QACKC,IAAxBD,EACI,yCACA,0CAA0CA,EACvCE,KAAKZ,GAAM,GAAGF,KAA2BE,MACzCa,KAAK,QAGV,SAAUC,EAAwBC,GACtC,OACEA,IAAUC,EAAgB7B,WAC1B4B,IAAUC,EAAgB5B,QAC1B2B,IAAUC,EAAgB3B,OAE9B"}