const e=e=>Array.from(e).reduce(((e,t,s)=>e+((e=>/[A-Z]/.test(e))(t)?`${s?"-":""}${t.toLowerCase()}`:t)),"");function t(e){const t=e.length-1;switch(e.length){case 0:return"";case 1:return`${e[0]}`;case 2:return`${e[0]} or ${e[1]}`;default:return`${e.slice(0,t).join(", ")}, or ${e[t]}`}}function s(e,t){return e.replaceAll(/:[a-zA-Z_|]+/g,(e=>{const s=e.slice(1).split("|");switch(s.length){case 1:return t[s[0]];case 2:if("json"!==s[1])throw new Error(`Unsupported template filter: ${s[1]}`);return JSON.stringify(t[s[0]]).replace(/"/g,"&quot;");default:throw new Error(`Unparsable template reference: ${e}`)}}))}function n(e=300){let t,s=()=>{};return n=>(s("throttled"),clearTimeout(t),new Promise(((r,a)=>{t=setTimeout((async()=>r(await n())),e),s=a})))}function r(e,t={}){const s=Object.assign({},t),n=t.children??[];delete s.children;const r=(t.classList??[]).filter((e=>"string"==typeof e));delete s.classList;const a=t.dataset;delete s.dataset,n.length&&t.textContent&&(n.unshift(t.textContent),delete s.textContent),r.length&&t.className&&(r.unshift(t.className),delete s.className);const o=Object.assign(document.createElement(e),s);return n.length&&o.replaceChildren(...n),r.length&&o.classList.add(...r),"object"==typeof a&&Object.assign(o.dataset,a),o}function a(e,t,...s){customElements.get(e)||customElements.define(e,t,...s)}const o=e=>e.toLowerCase().replace(/[^a-zA-Z0-9\-_]/g,"-");function c(t,s,n=!0){const r={},a=[];for(let n of s){let s;Array.isArray(n)&&([n,s]=n);const o=e(n);if(t.hasAttribute(o)){const e=t.getAttribute(o);r[n]=""===e||JSON.parse(e)}else void 0!==s?r[n]=s:(a.push(o),r[n]=void 0)}if(a.length>0&&n)throw console.warn(t),new Error(`Element is missing required attributes: ${a}`);return r}export{n as T,a,s as b,r as c,t as f,c as p,o as s};
//# sourceMappingURL=chunk-domLib.js.map
