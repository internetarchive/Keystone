const e=e=>Array.from(e).reduce(((e,t,r)=>e+((e=>/[A-Z]/.test(e))(t)?`${r?"-":""}${t.toLowerCase()}`:t)),"");function t(e){const t=e.length-1;switch(e.length){case 0:return"";case 1:return`${e[0]}`;case 2:return`${e[0]} or ${e[1]}`;default:return`${e.slice(0,t).join(", ")}, or ${e[t]}`}}function r(e,t){return e.replaceAll(/:[a-zA-Z_|]+/g,(e=>{const r=e.slice(1).split("|");switch(r.length){case 1:return t[r[0]];case 2:if("json"!==r[1])throw new Error(`Unsupported template filter: ${r[1]}`);return JSON.stringify(t[r[0]]).replace(/"/g,"&quot;");default:throw new Error(`Unparsable template reference: ${e}`)}}))}function s(e=300){let t,r=()=>{};return s=>(r("throttled"),clearTimeout(t),new Promise(((n,a)=>{t=setTimeout((async()=>n(await s())),e),r=a})))}function n(e,t={}){const r=Object.assign({},t),s=t.children??[];delete r.children;const n=(t.classList??[]).filter((e=>"string"==typeof e));delete r.classList,s.length&&t.textContent&&(s.unshift(t.textContent),delete r.textContent),n.length&&t.className&&(n.unshift(t.className),delete r.className);const a=Object.assign(document.createElement(e),r);return s.length&&a.replaceChildren(...s),n.length&&a.classList.add(...n),a}function a(e,t,...r){customElements.get(e)||customElements.define(e,t,...r)}const c=e=>e.replaceChildren(),o=e=>e.toLowerCase().replace(/[^a-zA-Z0-9\-_]/g,"-"),l=(e,...t)=>e.reduce(((e,r,s)=>e+r+(t[s]??"")),"");function i(t,r,s=!0){const n={},a=[];for(let s of r){let r;Array.isArray(s)&&([s,r]=s);const c=e(s);if(t.hasAttribute(c)){const e=t.getAttribute(c);n[s]=""===e||JSON.parse(e)}else void 0!==r?n[s]=r:(a.push(c),n[s]=void 0)}if(a.length>0&&s)throw console.warn(t),new Error(`Element is missing required attributes: ${a}`);return n}export{s as T,a,r as b,n as c,t as f,l as h,i as p,c as r,o as s};
//# sourceMappingURL=chunk-domLib.js.map
